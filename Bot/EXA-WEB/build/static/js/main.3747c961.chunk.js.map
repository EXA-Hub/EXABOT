{"version":3,"sources":["components/MainPage/guildSettings/musicCard.jsx","components/MainPage/guildSettings/helpers/transformer.jsx","components/MainPage/guildSettings/helpers/welcomeImage.jsx","components/MainPage/guildSettings/welcomeCard.jsx","components/MainPage/charts/chart.js","components/MainPage/charts/charts.jsx","components/MainPage/MainPage.jsx","App.js","index.js","data.js","components/api/getData.js"],"names":["backend","require","getData","MusicCard","props","alert","useAlert","songData","setSongData","useState","filters","setFilters","_jsx","volume","setVolume","displayedContacts","setDisplayedContacts","playSong","show","timeout","type","concat","guild","id","songName","then","_ref","data","message","catch","err","response","toString","spv","task","_ref2","useEffect","_ref5","Object","keys","map","filter","FormCheck","label","value","className","onChange","e","_ref4","status","target","checked","filtersFunction","style","display","border","borderStyle","borderWidth","borderColor","Contact","_jsxs","lastOne","overflow","borderBottom","padding","margin","children","src","image","alt","name","float","width","height","key","fontWeight","color","fontStyle","artist","ContactList","position","listStyleType","el","index","Button","backgroundColor","onClick","currentTarget","document","getElementById","length","Card","defaultValue","_ref6","title","onKeyPress","_ref3","autoPlay","Form","Label","Range","min","max","onMouseUp","async","Select","TransformerComponent","Component","componentDidMount","this","checkNode","componentDidUpdate","stage","transformer","getStage","selectedShapeName","selectedNode","findOne","node","attachTo","detach","getLayer","batchDraw","render","Transformer","ref","BackgroundImage","useImage","background","KonvaImage","x","y","fillPatternImage","welcomeCard","constructor","super","getImageSize","img","Image","url","addEventListener","state","StageData","setState","handleStageClick","welcomeImageData","TextData","memberCount","NaN","discordTag","user","tag","split","AvatarImg","AvatarData","Shape","circle","Circle","draggable","fillPatternOffset","offset","parseInt","scaleX","scaleY","rotation","cornerRadius","onDragEnd","attrs","forEach","avatarData","onTransformEnd","dir","align","Stage","Layer","Text","text","replace","fill","fontSize","fontFamily","console","log","textData","htmlFor","accept","files","item","includes","imageUrl","URL","createObjectURL","sized","placeholder","Check","variant","axios","headers","method","withCredentials","setWelcomeImageData","avatarURL","_Fragment","WelcomeImage","Spinner","animation","role","LineChart","arguments","chartRef","React","createRef","ctx","current","getContext","labelsData","Chart","labels","datasets","options","responsive","interaction","mode","intersect","stacked","plugins","scales","types","Carousel","Item","setTypes","servers","login","logout","add","cards","server","Img","Body","Title","href","invite","button","guildsIcons","guilds","guildData","icon","textDecoration","guildsMenu","CustomToggle","forwardRef","preventDefault","CustomMenu","labeledBy","setValue","FormControl","autoFocus","maxHeight","Children","toArray","child","toLowerCase","startsWith","num","menuGuildData","Dropdown","eventKey","active","window","location","Toggle","as","Menu","loginUrl","logoutUrl","guildID","URLSearchParams","search","get","MainPage","theme","localStorage","getItem","isDark","toggle","useDarkreader","userData","setUserData","setGuildData","setGuilds","guildSettingsData","setGuildSettingsData","prefix","guildBody","setGuildBody","guildsData","open","innerHeight","error","Switch","setItem","coins","marginRight","marginLeft","Tab","Container","defaultActiveKey","Row","Col","sm","Nav","Link","Content","Pane","Graphs","WelcomeCard","App","positions","BOTTOM_CENTER","transition","transitions","SCALE","Root","StrictMode","AlertProvider","template","AlertTemplate","ReactDOM","process","REACT_APP_VERCEL_GIT_REPO_OWNER","module","exports","buttons","function","params"],"mappings":"qRAIA,MAAM,QAAEA,GAAYC,EAAQ,KACtB,QAAEC,GAAYD,EAAQ,IAEb,SAASE,EAAUC,GAChC,MAAMC,EAAQC,eACPC,EAAUC,GAAeC,mBAAS,OAClCC,EAASC,GAAcF,mBAASG,cAAA,YAChCC,EAAQC,GAAaL,mBAAS,KAC9BM,EAAmBC,GAAwBP,mBAAS,IAE3D,SAASQ,IACP,IAAIV,EAuBF,OAAOF,EAAMa,KAAK,wHAA0B,CAC1CC,QAAS,IACTC,KAAM,SAxBRf,EAAMa,KAAK,kKAAiC,CAC1CC,QAAS,IACTC,KAAM,YAERlB,EACEF,EAAO,eAAAqB,OACUjB,EAAMkB,MAAMC,GAAE,yBAAAF,OAAwBd,EAASiB,WAE/DC,MAAKC,IAAe,IAAd,KAAEC,GAAMD,EACbrB,EAAMa,KAAKS,EAAKC,QAAS,CACvBT,QAAS,IACTC,KAAM,eAGTS,OAAOC,IACFA,GACFzB,EAAMa,KAAKY,EAAIC,SAASJ,KAAKC,QAAQI,WAAY,CAC/Cb,QAAS,IACTC,KAAM,aAUlB,SAASa,EAAIC,GACXhC,EAAQF,EAAO,eAAAqB,OAAkBjB,EAAMkB,MAAMC,GAAE,WAAAF,OAAUa,IACtDT,MAAKU,IAAe,IAAd,KAAER,GAAMQ,EACb9B,EAAMa,KAAKS,EAAKC,QAAS,CACvBT,QAAS,IACTC,KAAM,eAGTS,OAAOC,IACFA,GACFzB,EAAMa,KAAKY,EAAIC,SAASJ,KAAKC,QAAQI,WAAY,CAC/Cb,QAAS,IACTC,KAAM,aAyBhBgB,qBAAU,KAsBRlC,EAAQF,EAAO,qBAAwByB,MAAKY,IAAe,IAAd,KAAEV,GAAMU,EACnD1B,EACE2B,OAAOC,KAAKZ,GAAMa,KAAKC,GAEnB7B,cAAC8B,IAAS,CAERtB,KAAK,SACLuB,MAAOF,EACPG,MAAOH,EACPI,UAAU,MACVtB,GAAIkB,EAAS,UACbK,SAAWC,KAhCrB,SAAyBA,EAAGN,GAC1BvC,EACEF,EAAO,eAAAqB,OAAkBjB,EAAMkB,MAAMC,GAAE,yBAAAF,OAAwBoB,IAE9DhB,MAAKuB,IAAe,IAAd,KAAErB,GAAMqB,EACbrB,EAAKsB,OAAUF,EAAEG,OAAOC,SAAU,EAASJ,EAAEG,OAAOC,SAAU,EAC9D9C,EAAMa,KAAKS,EAAKC,QAAS,CACvBT,QAAS,IACTC,KAAM,eAGTS,OAAOC,IACFA,IACFiB,EAAEG,OAAOC,SAAU,EACnB9C,EAAMa,KAAKY,EAAIC,SAASJ,KAAKC,QAAQI,WAAY,CAC/Cb,QAAS,IACTC,KAAM,cAiBJgC,CAAgBL,EAAGA,EAAEG,OAAON,QAE9BS,MAAO,CACLC,QAAS,eACTC,OAAQ,QACRC,YAAa,gBACbC,YAAa,SACbC,YAAa,YAdVjB,WAqBd,CAACpC,EAAOD,EAAMkB,MAAMC,KAEvB,IAAIoC,EAAWhC,GAEXiC,eAAA,MAEEP,MACE1B,EAAKkC,QACD,CACEC,SAAU,SACVC,aAAc,iBACdC,QAAS,WACTC,OAAQ,KAEV,CACEH,SAAU,SACVG,OAAQ,WACRF,aAAc,iBACdC,QAAS,YAEhBE,SAAA,CAEDtD,cAAA,OAEEuD,IAAKxC,EAAKyC,MACVC,IAAK1C,EAAK2C,KACVjB,MAAO,CACLkB,MAAO,OACPjB,QAAS,QACTkB,MAAO,OACPC,OAAQ,OACRR,OAAQ,eARLtC,EAAK+C,KAWZ9D,cAAA,QAEEgC,MAAOjB,EAAK2C,KACZjB,MAAO,CACLC,QAAS,QACTkB,MAAO,OACPG,WAAY,SACZC,MAAO,WACPV,SAEDvC,EAAK2C,MATD3C,EAAK+C,KAWZ9D,cAAA,QAEEyC,MAAO,CACLsB,WAAY,SACZE,UAAW,SACXD,MAAO,QACPV,SAEDvC,EAAKmD,QAAM,GAAAzD,OAPJM,EAAK+C,IAAG,QA1Cb/C,EAAK+C,KAuDZK,EAAcA,IAEdnE,cAAA,OACEyC,MAAO,CACL2B,SAAU,WACVR,MAAO,MACPP,OAAQ,aACRC,SAEFtD,cAAA,MAEEyC,MAAO,CACL4B,cAAe,OACfD,SAAU,WACVR,MAAO,SACPN,SAEDnD,EAAkByB,KAAI,CAAC0C,EAAIC,IAExBvE,cAACwE,IAAM,CAELxC,MAAOsC,EAAG3D,GACV8B,MAAO,CAAEmB,MAAO,OAAQa,gBAAiB,SACzCC,QAAUvC,IACRvC,EAAY,CAAEgB,SAAUuB,EAAEwC,cAAc3C,QACxC4C,SAASC,eAAe,aAAa7C,MACnCG,EAAEwC,cAAc3C,MAClB5B,EAAqB,KACrBkD,SAEFtD,cAAC+C,EAAO,CACNN,MAAO,CAAEmB,MAAO,QAEhBF,KAAMY,EAAGZ,KACTF,MAAOc,EAAGd,MACVU,OAAQI,EAAGJ,OACXjB,QAASsB,IAAUpE,EAAkB2E,OAAS,GAJzCR,EAAG3D,KAZL2D,EAAG3D,OAoBZ,cAMV,OACEqC,eAAC+B,IAAI,CAAAzB,SAAA,CACHtD,cAAA,MAAAsD,SAAI,wEACJN,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEQ,KAAK,OACLG,GAAG,YACHsB,UAAU,sBACV+C,aAAa,6EACb9C,SAAWC,IACT/B,EAAqB,IACrB,WACE,MAAM,KAAEW,SAAezB,EACrBF,EAAO,eAAAqB,OACUjB,EAAMkB,MAAMC,GAAE,YAAAF,OAAW0B,EAAEG,OAAON,QAErD5B,EACEW,EAAKa,KAAIqD,IAA4B,IAA3B,GAAEtE,EAAE,MAAEuE,EAAK,OAAEhB,GAAQe,EAC7B,MAAO,CACLtE,KACA+C,KAAMwB,EACNhB,SACAV,MAAM,0BAAD/C,OAA4BE,EAAE,wBAX3C,GAgBAf,EAAY,CAAEgB,SAAUuB,EAAEG,OAAON,SAEnCmD,WAAahD,IACG,UAAVA,EAAE2B,KAAiBzD,OAG3BL,cAACmE,EAAW,IACZnB,eAAA,OAAKf,UAAU,qBAAoBqB,SAAA,CACjCtD,cAAA,UACE0E,QAASrE,EACT4B,UAAU,4BACVtB,GAAG,gBACHH,KAAK,SAAQ8C,SAEd,sBADK,QAINtD,cAACwE,IAAM,CACLE,QAASA,KACPrD,EAAI,SAENY,UAAU,YAAWqB,SAEtB,kCADK,QAINtD,cAACwE,IAAM,CACLE,QAASA,KACPrD,EAAI,UAENY,UAAU,YAAWqB,SAEtB,2DADK,SAINtD,cAACwE,IAAM,CACLE,QAASA,KACPrD,EAAI,SAENY,UAAU,YAAWqB,SAEtB,4BADK,UAjCgC,UAsCxCN,eAAA,OAAKf,UAAU,kBAAiBqB,SAAA,CAC9BtD,cAAC8B,IAAS,CACRtB,KAAK,SACLyB,UAAU,UACVtB,GAAG,kBACHoB,MAAM,8FACNU,MAAO,CACLC,QAAS,gBAEXR,SAAWC,KA/PrB,SAAkBA,GAChB7C,EAAQF,EAAO,eAAAqB,OAAkBjB,EAAMkB,MAAMC,GAAE,oBAC5CE,MAAKuE,IAAe,IAAd,KAAErE,GAAMqE,EACbrE,EAAKsE,SAAYlD,EAAEG,OAAOC,SAAU,EAASJ,EAAEG,OAAOC,SAAU,EAChE9C,EAAMa,KAAKS,EAAKC,QAAS,CACvBT,QAAS,IACTC,KAAM,eAGTS,OAAOC,IACFA,IACFiB,EAAEG,OAAOC,SAAU,EACnB9C,EAAMa,KAAKY,EAAIC,SAASJ,KAAKC,QAAQI,WAAY,CAC/Cb,QAAS,IACTC,KAAM,cAkPJ6E,CAASlD,MAGbnC,cAACsF,IAAKC,MAAK,CAAAjC,SAAC,6DACZtD,cAACsF,IAAKE,MAAK,CACTvD,UAAU,MACVwD,IAAI,IACJC,IAAI,MACJ1D,MAAO/B,EACPwC,MAAO,CACLmB,MAAO,MACPC,OAAQ,OACRG,MAAO,iBAET9B,SAAWC,IACTjC,EAAUiC,EAAEG,OAAON,QAErB2D,UAAWC,UACTvE,EAAI,iBAADZ,OAAkB0B,EAAEG,OAAON,WAGlCgB,eAACsC,IAAKC,MAAK,CAAAjC,SAAA,CAAErD,EAAO,SA/Be,YAiCrC+C,eAAA,MAAIf,UAAU,kBAAiBqB,SAAA,CAAC,qDACnBxD,EACXkD,eAACsC,IAAKO,OAAM,CACV,aAAW,yBACX5D,UAAU,MACVQ,MAAO,CACLmB,MAAO,MACPlB,QAAS,gBAEXR,SAAWC,IACTd,EAAI,aAADZ,OAAc0B,EAAEG,OAAON,SAC1BsB,SAAA,CAEFtD,cAAA,UAAQgC,MAAM,IAAGsB,SAAS,6EAAJ,KAGtBtD,cAAA,UAAQgC,MAAM,IAAGsB,SAAS,6EAAJ,KAGtBtD,cAAA,UAAQgC,MAAM,IAAGsB,SAAS,6EAAJ,aAzHU,a,YC3O7B,MAAMwC,UAA6BC,YAChDC,oBACEC,KAAKC,YAEPC,qBACEF,KAAKC,YAEPA,YACE,MAAME,EAAQH,KAAKI,YAAYC,YACzB,kBAAEC,GAAsBN,KAAKzG,MAC7BgH,EAAeJ,EAAMK,QAAQ,IAAMF,GACrCC,IAAiBP,KAAKI,YAAYK,SAGlCF,EACFP,KAAKI,YAAYM,SAASH,GAE1BP,KAAKI,YAAYO,SAEnBX,KAAKI,YAAYQ,WAAWC,aAE9BC,SACE,OACE/G,cAACgH,IAAW,CACVC,IAAMP,IACJT,KAAKI,YAAcK,M,sCCrB7B,MAAQtH,QAAQ,GAAIC,EAAQ,IAEtB6H,EAAkBpG,IAAe,IAAd,KAAEC,GAAMD,EAC/B,MAAO0C,GAAS2D,IAASpG,EAAKqG,YAC9B,OACEpH,cAACqH,IAAU,CACTC,EAAG,EACHC,EAAG,EACHC,iBAAkBhE,EAClBI,MAAOJ,EAAQA,EAAMI,MAAQ7C,EAAK6C,OAAS,IAC3CC,OAAQL,EAAQA,EAAMK,OAAS9C,EAAK8C,QAAU,OAKrC,MAAM4D,UAAoB1B,YACvC2B,YAAYlI,GACVmI,MAAMnI,GAAO,KAMfoI,aAAehC,UACb,MAAMiC,EAAM,IAAIC,MAChBD,EAAItE,IAAMwE,EACVF,EAAIG,iBAAiB,QAAS7F,IAC5B,MAAM,MAAEyB,EAAK,OAAEC,GAAW1B,EAAEwC,cAC5B,GAAIf,GAASC,EAAQ,CACnB,IAAIoE,EAAQhC,KAAKgC,MAIjB,OAHAA,EAAMlH,KAAKmH,UAAUtE,MAAQA,EAC7BqE,EAAMlH,KAAKmH,UAAUrE,OAASA,EAC9BoC,KAAKkC,YACE,OAGX,KACFC,iBAAoBjG,IAClB,IAAI8F,EAAQhC,KAAKgC,MACjBA,EAAM1B,kBAAoBpE,EAAEG,OAAOoB,OACnCuC,KAAKkC,SAASF,IAtBdhC,KAAKgC,MAAQ,CACX1B,kBAAmB,SACnBxF,KAAMkF,KAAKzG,MAAM6I,kBAsBrBtB,SACE,IAAIkB,EAAQhC,KAAKgC,OACb,KAAElH,GAASkH,GACX,SAAEK,GAAavH,EACfwH,EAActC,KAAKzG,MAAMkB,MAAQuF,KAAKzG,MAAMkB,MAAM6H,YAAcC,IACpE,MAAMC,EAAaxC,KAAKzG,MAAMkJ,KAC1BzC,KAAKzG,MAAMkJ,KAAKD,WAChB,sBACG/E,EAAMiF,GAAOF,EAAWG,MAAM,KAC/BC,EAAYA,KAChB,MAAM,WAAEC,GAAe7C,KAAKgC,MAAMlH,MAC3ByC,GAAS2D,IAASlB,KAAKgC,MAAMlH,KAAK+H,WAAWf,KAC9CgB,EAAQ9C,KAAKgC,MAAMlH,KAAK+H,WAAWE,OAASC,IAAS5B,IAC3D,OACErH,cAAC+I,EAAK,CACJrF,KAAK,SACLwF,WAAS,EACT1F,MAAOA,EACPgE,iBAAkBhE,EAClB2F,kBAAmB,CACjB7B,EAAGrB,KAAKgC,MAAMlH,KAAK+H,WAAWE,QACzBxF,EACGA,EAAMI,MACNqC,KAAKgC,MAAMlH,KAAK+H,WAAWlF,OAAS,KAAO,EAC/CqC,KAAKgC,MAAMlH,KAAK+H,WAAWlF,MAC/B2D,EAAGtB,KAAKgC,MAAMlH,KAAK+H,WAAWE,QACzBxF,EACGA,EAAMK,OACNoC,KAAKgC,MAAMlH,KAAK+H,WAAWjF,QAAU,KAAO,EAChDoC,KAAKgC,MAAMlH,KAAK+H,WAAWjF,QAEjCyD,EAAGrB,KAAKgC,MAAMlH,KAAK+H,WAAWxB,EAC9BC,EAAGtB,KAAKgC,MAAMlH,KAAK+H,WAAWvB,EAC9B6B,OACEnD,KAAKgC,MAAMlH,KAAK+H,WAAWE,OACvB,CACE1B,EAAG,EACHC,EAAG,GAEL,CACED,EAAG+B,SAASpD,KAAKgC,MAAMlH,KAAK+H,WAAWlF,OAAS,EAChD2D,EAAG8B,SAASpD,KAAKgC,MAAMlH,KAAK+H,WAAWjF,QAAU,GAGzDD,MAAOqC,KAAKgC,MAAMlH,KAAK+H,WAAWlF,OAAS,IAC3CC,OAAQoC,KAAKgC,MAAMlH,KAAK+H,WAAWjF,QAAU,IAC7CyF,OAAQrD,KAAKgC,MAAMlH,KAAK+H,WAAWQ,OACnCC,OAAQtD,KAAKgC,MAAMlH,KAAK+H,WAAWS,OACnCC,SAAUvD,KAAKgC,MAAMlH,KAAK+H,WAAWU,SACrCC,aAAc,GACdC,UAAYvH,IACV,MAAM,EAAEmF,EAAC,EAAEC,GAAMpF,EAAEG,OAAOqH,MAC1BjI,OAAOC,KAAK,CAAE2F,IAAGC,MAAKqC,SAAS9F,IAC7B,MAAM+F,EAAa,CACjBvC,IACAC,KAEFuB,EAAWhF,GAAO+F,EAAW/F,MAE/BmC,KAAKkC,SAASF,EAAMlH,OAEtB+I,eAAiB3H,IACf,MAAM,EAAEmF,EAAC,EAAEC,EAAC,SAAEiC,EAAQ,OAAEF,EAAM,OAAEC,GAAWpH,EAAEG,OAAOqH,MACpDjI,OAAOC,KAAK,CACV2F,IACAC,IACA+B,SACAC,SACAC,aACCI,SAAS9F,IACV,MAAM+F,EAAa,CACjBvC,IACAC,IACA+B,SACAC,SACAC,YAEFV,EAAWhF,GAAO+F,EAAW/F,MAE/BmC,KAAKkC,SAASF,EAAMlH,UAK5B,OACEiC,eAAC+B,IAAI,CAAAzB,SAAA,CACHtD,cAAA,OAAK+J,IAAI,MAAM9H,UAAU,QAAQ+H,MAAM,SAAQ1G,SAC7CtD,cAACiK,IAAK,CACJvF,QAASuB,KAAKmC,iBACdxE,MAAOqC,KAAKgC,MAAMlH,KAAKmH,UAAUtE,MACjCC,OAAQoC,KAAKgC,MAAMlH,KAAKmH,UAAUrE,OAAOP,SAEzCN,eAACkH,IAAK,CAAA5G,SAAA,CACJtD,cAACkH,EAAe,CAACnG,KAAMkF,KAAKgC,MAAMlH,KAAKmH,YACvClI,cAACmK,IAAI,CACHzG,KAAK,OACLwF,WAAS,EACTkB,KAAM9B,EAAS8B,KACZC,QAAQ,iBAAkB5B,GAC1B4B,QAAQ,WAAY3G,GACpB2G,QAAQ,UAAW1B,GACnB0B,QAAQ,kBAAmB9B,GAC9BjB,EAAGgB,EAAShB,EACZC,EAAGe,EAASf,EACZ+C,KAAMhC,EAASgC,KACfC,SAAUjC,EAASiC,SACnBjB,OAAQhB,EAASgB,OACjBC,OAAQjB,EAASiB,OACjBiB,WAAW,OACXd,UAAYvH,IACVsI,QAAQC,IAAIvI,GACZ8F,EAAMlH,KAAKuH,SAAShB,EAAInF,EAAEG,OAAOqH,MAAMrC,EACvCW,EAAMlH,KAAKuH,SAASf,EAAIpF,EAAEG,OAAOqH,MAAMpC,EACvCtB,KAAKkC,SAASF,IAEhBuB,SAAUvD,KAAKgC,MAAMlH,KAAKuH,SAASkB,SACnCM,eAAiB3H,IACf,MAAM,EAAEmF,EAAC,EAAEC,EAAC,OAAE+B,EAAM,OAAEC,EAAM,SAAEC,GAAarH,EAAEG,OAAOqH,MACpDjI,OAAOC,KAAK,CAAE2F,IAAGC,IAAG+B,SAAQC,SAAQC,aAAYI,SAC7C9F,IACC,MAAM6G,EAAW,CACfrD,IACAC,IACA+B,OAAQA,EACRC,OAAQA,EACRC,YAEFlB,EAASxE,GAAO6G,EAAS7G,MAG7BmC,KAAKkC,SAASF,EAAMlH,SAGxBf,cAAC6I,EAAS,IACV7I,cAAC8F,EAAoB,CACnBS,kBAAmBN,KAAKgC,MAAM1B,2BAKtCvD,eAAA,OAAKf,UAAU,OAAMqB,SAAA,CACnBtD,cAAA,SAAO4K,QAAQ,gBAAgB3I,UAAU,aAAYqB,SAAC,gKAGtDtD,cAAA,SACEiC,UAAU,eACVzB,KAAK,OACLG,GAAG,gBACHkK,OAAO,wBACPpI,MAAO,CACLuB,MAAO,SAET9B,SAAWC,IACT,MAAMqB,EAAQrB,EAAEG,OAAOwI,MAAMC,KAAK,GAalC,GAZkB,CAChB,aACA,YACA,YACA,aACA,cACA,YACA,gBACA,aACA,aACA,gBAEYC,SAASxH,EAAMhD,MAAO,CAClC,MAAMyK,EAAWC,IAAIC,gBAAgB3H,GACrC,IAAKyH,GAAYA,EAASnG,OAAS,EAAG,OACtCmD,EAAMlH,KAAKmH,UAAUd,WAAa6D,EAClChF,KAAKkC,SAASF,GACdhC,KAAK2B,aAAaqD,GAAUpK,MAAMuK,IAE3BjJ,EAAEG,OAAOG,MAAMuB,MADfoH,EACuB,MADO,gBAGhCjJ,EAAEG,OAAOG,MAAMuB,MAAQ,YAIpChB,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAKmH,UAAUd,WACjC3E,MAAO,CAAEuB,MAAO,SAChB9B,SAAWC,IACT,IAAKA,EAAEG,OAAON,OAASG,EAAEG,OAAON,MAAM8C,OAAS,EAC7C,OAAQ3C,EAAEG,OAAOG,MAAMuB,MAAQ,MACjCiE,EAAMlH,KAAKmH,UAAUd,WAAajF,EAAEG,OAAON,MAC3CiE,KAAKkC,SAASF,GACdhC,KAAK2B,aAAazF,EAAEG,OAAON,OAAOnB,MAAMuK,IAEjCjJ,EAAEG,OAAOG,MAAMuB,MADfoH,EACuB,MADO,YAIvC5K,KAAK,OACLyB,UAAU,eACVoJ,YAAY,iGAEdrL,cAAA,QAAMiC,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAC,sGAIvDN,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAK+H,WAAWxB,EAClCpF,SAAWC,IACT,MAAMH,EAAQqH,SAASlH,EAAEG,OAAON,OAChCiG,EAAMlH,KAAK+H,WAAWxB,EAAItF,GAASiG,EAAMlH,KAAK+H,WAAWxB,EACzDrB,KAAKkC,SAASF,IAEhBzH,KAAK,SACLyB,UAAU,eACVoJ,YAAY,sIAEdrL,cAAA,QAAMiC,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAC,2IAIvDN,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAK+H,WAAWvB,EAClCrF,SAAWC,IACT,MAAMH,EAAQqH,SAASlH,EAAEG,OAAON,OAChCiG,EAAMlH,KAAK+H,WAAWvB,EAAIvF,GAASiG,EAAMlH,KAAK+H,WAAWvB,EACzDtB,KAAKkC,SAASF,IAEhBzH,KAAK,SACLyB,UAAU,eACVoJ,YAAY,sIAEdrL,cAAA,QAAMiC,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAC,2IAIvDN,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAK+H,WAAWQ,OAClCpH,SAAWC,IACT,MAAMH,EAAQqH,SAASlH,EAAEG,OAAON,OAChCiG,EAAMlH,KAAK+H,WAAWQ,OACpBtH,GAASiG,EAAMlH,KAAK+H,WAAWQ,OACjCrD,KAAKkC,SAASF,IAEhBzH,KAAK,SACLyB,UAAU,eACVoJ,YAAY,qFAEdrL,cAAA,QAAMiC,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAC,oFAIvDN,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAK+H,WAAWS,OAClCrH,SAAWC,IACT,MAAMH,EAAQqH,SAASlH,EAAEG,OAAON,OAChCiG,EAAMlH,KAAK+H,WAAWS,OACpBvH,GAASiG,EAAMlH,KAAK+H,WAAWS,OACjCtD,KAAKkC,SAASF,IAEhBzH,KAAK,SACLyB,UAAU,eACVoJ,YAAY,qFAEdrL,cAAA,QAAMiC,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAC,oFAIvDN,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAK+H,WAAWU,SAClCtH,SAAWC,IACT,MAAMH,EAAQqH,SAASlH,EAAEG,OAAON,OAChCiG,EAAMlH,KAAK+H,WAAWU,SACpBxH,GAASiG,EAAMlH,KAAK+H,WAAWU,SACjCvD,KAAKkC,SAASF,IAEhBzH,KAAK,SACLyB,UAAU,eACVoJ,YAAY,2FAEdrI,eAAA,QAAMf,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAA,CAClDtD,cAACsF,IAAI,CAAAhC,SACHtD,cAACsF,IAAKgG,MAAK,CACTvJ,MAAM,IACNvB,KAAK,SACLG,GAAG,eACH4B,QAAS0D,KAAKgC,MAAMlH,KAAK+H,WAAWE,OACpC9G,SAAWC,IACT8F,EAAMlH,KAAK+H,WAAWE,OAAS7G,EAAEG,OAAOC,QACxC0D,KAAKkC,SAASF,QAGb,2FAIXjF,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAKuH,SAAShB,EAChCpF,SAAWC,IACT,MAAMH,EAAQqH,SAASlH,EAAEG,OAAON,OAChCiG,EAAMlH,KAAKuH,SAAShB,EAAItF,GAASiG,EAAMlH,KAAKuH,SAAShB,EACrDrB,KAAKkC,SAASF,IAEhBzH,KAAK,SACLyB,UAAU,eACVoJ,YAAY,sIAEdrL,cAAA,QAAMiC,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAC,2IAIvDN,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAKuH,SAASf,EAChCrF,SAAWC,IACT,MAAMH,EAAQqH,SAASlH,EAAEG,OAAON,OAChCiG,EAAMlH,KAAKuH,SAASf,EAAIvF,GAASiG,EAAMlH,KAAKuH,SAASf,EACrDtB,KAAKkC,SAASF,IAEhBzH,KAAK,SACLyB,UAAU,eACVoJ,YAAY,sIAEdrL,cAAA,QAAMiC,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAC,2IAIvDN,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAKuH,SAASgB,OAChCpH,SAAWC,IACT,MAAMH,EAAQqH,SAASlH,EAAEG,OAAON,OAChCiG,EAAMlH,KAAKuH,SAASgB,OAAStH,GAASiG,EAAMlH,KAAKuH,SAASgB,OAC1DrD,KAAKkC,SAASF,IAEhBzH,KAAK,SACLyB,UAAU,eACVoJ,YAAY,+EAEdrL,cAAA,QAAMiC,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAC,oFAIvDN,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAKuH,SAASiB,OAChCrH,SAAWC,IACT,MAAMH,EAAQqH,SAASlH,EAAEG,OAAON,OAChCiG,EAAMlH,KAAKuH,SAASiB,OAASvH,GAASiG,EAAMlH,KAAKuH,SAASiB,OAC1DtD,KAAKkC,SAASF,IAEhBzH,KAAK,SACLyB,UAAU,eACVoJ,YAAY,+EAEdrL,cAAA,QAAMiC,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAC,oFAIvDN,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAKuH,SAASiC,SAChCrI,SAAWC,IACT,MAAMH,EAAQqH,SAASlH,EAAEG,OAAON,OAChCiG,EAAMlH,KAAKuH,SAASiC,SAClBvI,GAASiG,EAAMlH,KAAKuH,SAASiC,SAC/BtE,KAAKkC,SAASF,IAEhBzH,KAAK,SACLyB,UAAU,eACVoJ,YAAY,+EAEdrL,cAAA,QAAMiC,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAC,oFAIvDN,eAAA,OAAKf,UAAU,mBAAkBqB,SAAA,CAC/BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAKuH,SAASkB,SAChCtH,SAAWC,IACT,MAAMH,EAAQqH,SAASlH,EAAEG,OAAON,OAChCiG,EAAMlH,KAAKuH,SAASkB,SAClBxH,GAASiG,EAAMlH,KAAKuH,SAASkB,SAC/BvD,KAAKkC,SAASF,IAEhBzH,KAAK,SACLyB,UAAU,eACVoJ,YAAY,qFAEdrL,cAAA,QAAMiC,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAC,0FAIvDN,eAAA,OAAKf,UAAU,kBAAiBqB,SAAA,CAC9BN,eAAA,OAAKf,UAAU,cAAaqB,SAAA,CAC1BtD,cAAA,SACEgC,MAAOiE,KAAKgC,MAAMlH,KAAKuH,SAAS8B,KAChClI,SAAU0D,UACRqC,EAAMlH,KAAKuH,SAAS8B,KAAOjI,EAAEG,OAAON,MACpCiE,KAAKkC,SAASF,IAEhBzH,KAAK,OACLyB,UAAU,eACVoJ,YAAY,0DACZ,mBAAiB,kBACjB1K,GAAG,oBAELqC,eAAA,QAAMf,UAAU,mBAAmBtB,GAAG,eAAc2C,SAAA,CAClDtD,cAAA,SACEQ,KAAK,QACLwB,MAAOiG,EAAMlH,KAAKuH,SAASgC,KAC3BpI,SAAWC,IACT8F,EAAMlH,KAAKuH,SAASgC,KAAOnI,EAAEwC,cAAc3C,MAC3CiE,KAAKkC,SAASF,MAEhB,kEAINjI,cAAA,SAAOW,GAAG,kBAAkBsB,UAAU,uBAAsBqB,SA7c9C,uDAidhBtD,cAACwE,IAAM,CACL+G,QAAQ,UACR7G,QAASkB,gBACD4F,IAAM,CACVC,QAAS,GACTC,OAAQ,OACR3K,KAAMkF,KAAKgC,MAAMlH,KACjB4K,iBAAiB,EACjB5D,IAAK3I,EAAO,eAAAqB,OAAkBwF,KAAKzG,MAAMkB,MAAMC,GAAE,cAEhDE,MAAKU,IAAe,IAAd,KAAER,GAAMQ,EACb0E,KAAKzG,MAAMC,MAAMa,KAAKS,EAAKC,QAAS,CAClCT,QAAS,IACTC,KAAM,eAGTS,OAAOC,IACFA,GACF+E,KAAKzG,MAAMC,MAAMa,KAAKY,EAAIC,SAASJ,KAAKC,QAAQI,WAAY,CAC1Db,QAAS,IACTC,KAAM,cAId8C,SACH,4B,aC7eT,MAAQlE,QAAQ,GAAIC,EAAQ,KACpBC,QAAQ,GAAID,EAAQ,IAEb,SAASE,EAAUC,GAChC,MAAMC,EAAQC,eACP2I,EAAkBuD,GAAuB/L,mBAAS,MA0CzD,OAxCA2B,qBAAU,KACRlC,EAAQ,GAADmB,OAAIrB,EAAO,gBAAAqB,OAAejB,EAAMkB,MAAMC,GAAE,aAAYE,MACzDC,IAAe,IAAd,KAAEC,GAAMD,EACHY,OAAOC,KAAKZ,GAAM+D,OAAQ8G,EAAoB7K,GAEhD6K,EAAoB,CAClB1D,UAAW,CACTtE,MAAO,IACPC,OAAQ,IACRuD,WACE,oGAEJ0B,WAAY,CACVf,IAAKvI,EAAMkJ,KACPlJ,EAAMkJ,KAAKmD,UACX,uFACJvE,EAAG,GACHC,EAAG,IACH3D,MAAO,IACPC,OAAQ,IACRyF,OAAQ,EACRC,OAAQ,EACRC,SAAU,EACVR,QAAQ,GAEVV,SAAU,CACR8B,KAAM5K,EAAMkJ,KAAO,iBAAmB,qBACtCpB,EAAG,GACHC,EAAG,IACHgD,SAAU,GACVf,SAAU,EACVF,OAAQ,EACRC,OAAQ,EACRe,KAAM,kBAKf,CAAC9K,EAAMkB,MAAMC,GAAInB,EAAMkJ,OAGxB1I,cAAA8L,WAAA,CAAAxI,SACG+E,EACCrI,cAAC+L,EAAY,CACXrL,MAAOlB,EAAMkB,MACbgI,KAAMlJ,EAAMkJ,KACZjJ,MAAOA,EACP4I,iBAAkBA,IAGpBrI,cAACgM,IAAO,CAACC,UAAU,SAASC,KAAK,SAAQ5I,SACvCtD,cAAA,QAAMiC,UAAU,kBAAiBqB,SAAC,yJ,6BC3D5C,MAAQlE,QAAQ,GAAIC,EAAQ,KACpBC,QAAQ,GAAID,EAAQ,IAEb,MAAM8M,UAAkBpG,YAAU2B,cAAA,SAAA0E,WAAA,KAC/CC,SAAWC,IAAMC,YAEjB3G,0BACE,MAAM4G,EAAMvG,KAAKoG,SAASI,QAAQC,WAAW,MAEvCC,QAAmBrN,EACvBF,EAAO,eAAAqB,OAAkBwF,KAAKzG,MAAMkB,MAAMC,GAAE,UAAAF,OAASwF,KAAKzG,MAAMgB,OAGlE,IAAIoM,IAAMJ,EAAK,CACbhM,KAAM,OACNO,KAAM,CACJ8L,OAAQF,EAAW5L,KAAK8L,OACxBC,SAAU,CACR,CACE/L,KAAM4L,EAAW5L,KAAKA,KACtBgB,MAAM,kCAADtB,OAAWwF,KAAKzG,MAAMkE,MAC3BZ,YAAa,UACb2B,gBAAiB,UACjB6F,MAAM,KAIZyC,QAAS,CACPC,YAAY,EACZC,YAAa,CACXC,KAAM,QACNC,WAAW,GAEbC,SAAS,EACTC,QAAS,CACPnI,MAAO,CACLxC,SAAS,EACT0H,KAAK,4GAAD3J,OAAyBwF,KAAKzG,MAAMkE,KAAI,0DAAAjD,OAAiBwF,KAAKzG,MAAMgB,KAAI,OAGhF8M,OAAQ,CACN/F,EAAG,CACD/G,KAAM,SACNkC,SAAS,EACT0B,SAAU,YAOpB2C,SACE,OACE/D,eAAC+B,IAAI,CAAAzB,SAAA,CAAuB,0FACR2C,KAAKzG,MAAMkB,MAAMgD,KACnC1D,cAAA,OAAAsD,SACEtD,cAAA,UAAQW,GAAG,UAAUsG,IAAKhB,KAAKoG,eAHxBpG,KAAKzG,MAAMgB,OCrD5B,MAAQpB,QAAQ,GAAIC,EAAQ,KACpBC,QAAQ,GAAID,EAAQ,IAE5B,SAAS0H,EAAOwG,EAAO/N,GACrB,OAAI+N,EACK7L,OAAOC,KAAK4L,GAAO3L,KAAKpB,GAC7BR,cAACwN,IAASC,KAAI,CAAAnK,SACZtD,cAAC4M,EAAK,CAAClM,MAAOlB,EAAMkB,MAAOF,KAAMA,EAAMkD,KAAM6J,EAAM/M,MADjCA,KAMpBR,cAACgM,IAAO,CAACC,UAAU,SAASC,KAAK,SAAQ5I,SACvCtD,cAAA,QAAMiC,UAAU,kBAAiBqB,SAAC,iBAK3B,SAAS6I,EAAU3M,GAChC,MAAO+N,EAAOG,GAAY7N,qBAQ1B,OANA2B,qBAAU,KACRlC,EAAQF,EAAO,eAAAqB,OAAkBjB,EAAMkB,MAAMC,GAAE,UAASE,MAAKC,IAAe,IAAd,KAAEC,GAAMD,EACpE4M,EAAS3M,QAEV,CAACvB,EAAMkB,MAAMC,KAGdX,cAAC+E,IAAI,CAAAzB,SACHtD,cAACwN,IAAQ,CAAAlK,SAAEyD,EAAOwG,EAAO/N,OChB/B,MAAM,QACJmO,EAAO,MACPC,EAAK,KACLlF,EAAI,OACJmF,EAAM,MACNnN,EAAK,IACLoN,EACA1O,QACF,GAAIC,EAAQ,KACJC,QAAQ,GAAID,EAAQ,IAEtB0O,GAAQJ,EAAQ/L,KAAKoM,GAEvBhO,cAAA,OAAKiC,UAAU,SAAQqB,SACrBN,eAAC+B,IAAI,CAAC9C,UAAU,OAAMqB,SAAA,CACpBtD,cAAC+E,IAAKkJ,IAAG,CAAC1C,QAAQ,MAAMhI,IAAKyK,EAAOxK,MAAOC,IAAKuK,EAAO9I,QACvDlC,eAAC+B,IAAKmJ,KAAI,CAAA5K,SAAA,CACRtD,cAAC+E,IAAKoJ,MAAK,CAAA7K,SAAE0K,EAAO9I,QACpBlF,cAAC+E,IAAKoF,KAAI,CAAA7G,SAAE0K,EAAO5D,OACnBpK,cAACwE,IAAM,CAAC+G,QAAQ,UAAU6C,KAAMJ,EAAOK,OAAQ/L,OAAO,SAAQgB,SAC3D0K,EAAOM,gBAPaN,EAAO9I,SAexC,SAASqJ,GAAYC,GACnB,OAAOA,EAAO5M,KAAK6M,GAEfzO,cAAA,OAAwBiC,UAAU,aAAYqB,SAC5CN,eAAA,OAAKf,UAAU,OAAMqB,SAAA,CACnBtD,cAAA,OACEiC,UAAU,wBACVsB,IACEkL,EAAUC,KAAI,oCAAAjO,OAC0BgO,EAAU9N,GAAE,KAAAF,OAAIgO,EAAUC,KAAI,kBAClE,uGAENjL,IAAKgL,EAAU/K,OAEjB1D,cAACwE,IAAM,CACLvC,UAAU,cACVmM,KAAI,UAAA3N,OAAYgO,EAAU9N,IAC1B8B,MAAO,CAAEkM,eAAgB,QAASrL,SAEjCmL,EAAU/K,WAhBP+K,EAAU9N,MAwB1B,SAASiO,GAAWH,EAAWD,GAG7B,MAAMK,EAAevC,IAAMwC,YAAW,CAAAhO,EAAwBmG,KAAG,IAA1B,SAAE3D,EAAQ,QAAEoB,GAAS5D,EAAA,OAC1DkC,eAAA,KACEoL,KAAK,IACLnH,IAAKA,EACLxE,MAAO,CAAEkM,eAAgB,QACzBjK,QAAUvC,IACRA,EAAE4M,iBACFrK,EAAQvC,IACRmB,SAAA,CAEDA,EAAS,eAMR0L,EAAa1C,IAAMwC,YACvB,CAAAvN,EAA+D0F,KAAS,IAAvE,SAAE3D,EAAQ,MAAEb,EAAK,UAAER,EAAW,kBAAmBgN,GAAW1N,EAC3D,MAAOS,EAAOkN,GAAYrP,mBAAS,IACnC,OACEmD,eAAA,OACEiE,IAAKA,EACLxE,MAAOA,EACPR,UAAWA,EACX,kBAAiBgN,EAAU3L,SAAA,CAE3BtD,cAACmP,IAAW,CACVC,WAAS,EACTnN,UAAU,mBACVoJ,YAAY,gFACZnJ,SAAWC,GAAM+M,EAAS/M,EAAEG,OAAON,OACnCA,MAAOA,IAEThC,cAAA,MACEiC,UAAU,gBACVQ,MAAO,CACL4M,UAAW,QACXnM,SAAU,QACVI,SAEDgJ,IAAMgD,SAASC,QAAQjM,GAAUzB,QAC/B2N,IACExN,GAASwN,EAAMhQ,MAAM8D,SAASmM,cAAcC,WAAW1N,aAOtE,IAAI2N,EAAM,EACV,MAAMf,EAAaJ,EAAO5M,KAAKgO,GACzBA,EAAcjP,KAAO8N,EAAU9N,GAE/BX,cAAC6P,IAASpC,KAAI,CAACqC,SAAQ,GAAArP,SAAOkP,GAA8BI,QAAM,EAAAzM,SAC/DsM,EAAclM,MADyBkM,EAAcjP,IAMxDX,cAAC6P,IAASpC,KAAI,CAEZqC,SAAQ,GAAArP,SAAOkP,GACfjL,QAASA,IAAOsL,OAAOC,SAAS7B,KAAO,WAAawB,EAAcjP,GAAI2C,SAErEsM,EAAclM,MAAI,GAAAjD,SAJTkP,MASlB,OACE3M,eAAC6M,IAAQ,CAAAvM,SAAA,CACPtD,cAAC6P,IAASK,OAAM,CACdC,GAAItB,EACJtD,QAAQ,UACR5K,GAAG,6BAA4B2C,SAE9BmL,EAAU/K,OAEb1D,cAAC6P,IAASO,KAAI,CAACD,GAAInB,EAAW1L,SAAEsL,OAKtC,MAAMyB,GAAWA,IAAOL,OAAOC,SAAS7B,KAAOR,EACzC0C,GAAYA,IAAON,OAAOC,SAAS7B,KAAOP,EAK1C0C,GADS,IAAIC,gBAAgBR,OAAOC,SAASQ,QAC5BC,IAAI,SAEZ,SAASC,GAASnR,GAC/B,MAAMC,EAAQC,cAERkR,EAA0C,SAAlCC,aAAaC,QAAQ,UAC5BC,GAAQ,OAAEC,IAAYC,YAAcL,IACpCM,EAAUC,GAAetR,mBAAS,OAClC4O,EAAW2C,GAAgBvR,mBAAS,OACpC2O,EAAQ6C,GAAaxR,mBAASG,cAAA,MAAAsD,SAAI,uFAClCgO,EAAmBC,GAAwB1R,mBAAS,CAAE2R,OAAQ,OAC9DC,EAAWC,GAAgB7R,mBAAS,MAwF3C,OAtFA2B,qBAAU,KACRlC,EAAQoJ,GACL7H,MAAKuE,IAAe,IAAd,KAAErE,GAAMqE,EACb+L,EAAYpQ,MAEbE,OAAOC,IACFA,IACFuJ,QAAQC,IAAIxJ,GACZzB,EAAMa,KAAK,sGAAuB,CAChCC,QAAS,IACTC,KAAM,gBAIb,CAACf,IAEJ+B,qBAAU,KACR,WACE,MAAMmQ,QAAoBT,QAAkBA,EAAS1C,OAAS,GAC9D6C,EAAUM,IAFZ,KAIC,CAACT,IAEJ1P,qBAAU,KACJ+O,IACFjR,EAAQoB,EAAK,IAAAD,OAAO8P,KACjB1P,MAAKuB,IAAe,IAAd,KAAErB,GAAMqB,EACbgP,EAAarQ,MAEdE,OAAOC,IACFA,IACFuJ,QAAQC,IAAIxJ,GACZzB,EAAMa,KAAK,kOAA+C,CACxDC,QAAS,IACTC,KAAM,UAERwP,OAAO4B,KACL9D,EAAG,YAAArN,OAAe8P,IAClB,aACA,oBAAsBP,OAAO6B,mBAKtC,CAACpS,IAEJ+B,qBAAU,KACH+O,IACLjR,EAAQF,EAAO,eAAAqB,OAAkB8P,GAAO,gBACrC1P,MAAKY,IAAe,IAAd,KAAEV,GAAMU,EACb8P,EAAqB,CAAEC,OAAQzQ,EAAKyQ,OAAOA,QAAU,MACrDE,GAAa,MAEdzQ,OAAOC,IACFA,IACFuJ,QAAQqH,MAAM5Q,GACdzB,EAAMa,KAAK,kHAAyB,CAClCC,QAAS,IACTC,KAAM,UAERkR,EAAa,YAGlB,CAACjS,IAwBFuD,eAAA,OAAAM,SAAA,CACEtD,cAAA,UAAQiC,UAAU,uCAAsCqB,SACtDtD,cAAA,OAAKiC,UAAU,YAAWqB,SACxBN,eAAA,OAAKf,UAAU,sFAAqFqB,SAAA,CAClGtD,cAAA,KACEoO,KAAK,IACLnM,UAAU,2EAYZe,eAAA,MAAIf,UAAU,wEAAuEqB,SAAA,CACnFtD,cAAA,MAAAsD,SACEtD,cAAA,KAAcoO,KAAK,IAAInM,UAAU,2BAA0BqB,SAAC,yFAArD,SADD,QAKRtD,cAAA,MAAAsD,SACEtD,cAAA,KAEEoO,KAAK,oCACLnM,UAAU,2BAA0BqB,SACrC,8CAHK,WAFA,UASRtD,cAAA,MAAAsD,SACEtD,cAAA,KAEEoO,KAAK,gCACLnM,UAAU,2BAA0BqB,SACrC,iEAHK,YAFA,WASRtD,cAAA,MAAAsD,SACEtD,cAAA,KAEEoO,KAAK,gCACLnM,UAAU,2BAA0BqB,SACrC,uEAHK,WAFA,UASRtD,cAAA,MAAAsD,SACEtD,cAAA,KAEEoO,KAAK,gCACLnM,UAAU,2BAA0BqB,SACrC,yCAHK,QAFA,UAUVtD,cAAC+R,IAAM,CACLxP,QAASwO,EACT7O,SAAWC,IACT6O,IACAH,aAAamB,QAAQ,SAASjB,MAGlC/Q,cAAA,OAAKiC,UAAU,mBAAkBqB,SAC9B4N,EACClR,cAAA,UACEQ,KAAK,SACLyB,UAAU,8BACVyC,QAAS4L,GAAUhN,SACpB,wEAIDtD,cAAA,UACEQ,KAAK,SACLyB,UAAU,+BACVyC,QAAS2L,GAAS/M,SACnB,iFAQXN,eAAA,MAAIf,UAAU,wCAAuCqB,SAAA,CAClD4N,EAAWA,EAASzI,WAAa,gBAClCzI,cAAA,KACEyC,MAAO,CACL+H,WAAY,wBACZlH,SAEFN,eAAA,QAAMP,MAAO,CAAEuB,MAAO,QAAU/B,UAAU,QAAOqB,SAAA,CAAC,IAC9C4N,EAAWA,EAASe,MAAQ,YAIpCjS,cAAA,OACEiC,UAAU,2BACVQ,MAAO,CACLyP,YAAa,MACbC,WAAY,OACZ7O,SAEDmL,EACCzL,eAAA,OAAAM,SAAA,CACEtD,cAAA,OAEEiC,UAAU,wCAAuCqB,SAEhDsL,GAAWH,EAAWD,IAHnB,cAKLiD,EACCzO,eAAA,OAAAM,SAAA,CACEN,eAAA,OAAKf,UAAU,6BAA4BqB,SAAA,CACzCtD,cAAA,SACEyC,MAAO,CAAEmB,MAAO,OAChBoB,aAAcsM,EAAkBE,QAAU,IAC1CtP,SAAWC,GACToP,EAAqB,CAAEC,OAAQrP,EAAEG,OAAON,UAG5ChC,cAACwE,IAAM,CAACvC,UAAU,MAAMyC,QArJxC,WACEpF,EACEF,EAAO,eAAAqB,OACU8P,GAAO,uBAAA9P,OAAsB6Q,EAAkBE,SAE/D3Q,MAAKoE,IAAe,IAAd,KAAElE,GAAMkE,EACbsM,EAAqB,CAAEC,OAAQzQ,IAC/BtB,EAAMa,KAAK,8CAAY,CACrBC,QAAS,IACTC,KAAM,eAGTS,OAAOC,IACFA,GACFzB,EAAMa,KAAK,qBAAO,CAChBC,QAAS,IACTC,KAAM,cAqI2C8C,SAAC,qEAI9CtD,cAACoS,IAAIC,UAAS,CACZ1R,GAAG,oBACH2R,iBAAiB,OAAMhP,SAGvBN,eAACuP,IAAG,CAAAjP,SAAA,CACFtD,cAACwS,IAAG,CAACC,GAAI,EAAEnP,SACTN,eAAC0P,IAAG,CAACnH,QAAQ,QAAQtJ,UAAU,cAAaqB,SAAA,CAC1CtD,cAAC0S,IAAIjF,KAAI,CAAAnK,SACPtD,cAAC0S,IAAIC,KAAI,CAAC7C,SAAS,OAAMxM,SAAY,yFAAP,SADlB,QAKdtD,cAAC0S,IAAIjF,KAAI,CAAAnK,SACPtD,cAAC0S,IAAIC,KAAI,CAAC7C,SAAS,YAAWxM,SAAiB,oDAAZ,cADvB,aAKdtD,cAAC0S,IAAIjF,KAAI,CAAAnK,SACPtD,cAAC0S,IAAIC,KAAI,CAAC7C,SAAS,cAAaxM,SAAmB,6EAAd,gBADzB,eAKdtD,cAAC0S,IAAIjF,KAAI,CAAAnK,SACPtD,cAAC0S,IAAIC,KAAI,CAAC7C,SAAS,SAAQxM,SAAc,sBAAT,WADpB,cAjBF,OAwBhBtD,cAACwS,IAAG,CAACC,GAAI,EAAEnP,SACTN,eAACoP,IAAIQ,QAAO,CAAAtP,SAAA,CACVtD,cAACoS,IAAIS,KAAI,CAAC/C,SAAS,OAAMxM,SACvBtD,cAAC8S,EAAM,CAACpS,MAAO+N,KADa,QAG9BzO,cAACoS,IAAIS,KAAI,CAAC/C,SAAS,YAAWxM,SAC5BtD,cAAA,OAAAsD,SACEtD,cAACT,EAAS,CAACmB,MAAO+N,KADX,cADwB,aAKnCzO,cAACoS,IAAIS,KAAI,CAAC/C,SAAS,cAAaxM,SAC9BtD,cAAC+S,EAAW,CAACrS,MAAO+N,EAAW/F,KAAMwI,KADF,eAGrClR,cAACoS,IAAIS,KAAI,CAAC/C,SAAS,SAAQxM,SAAc,kCAAT,YAZjB,eADH,WA3Bd,kBAhBC,aAiETtD,cAAA,MAAAsD,SAAI,mEAzEC,UA4EP4N,EACF3C,GAAYC,GAEZT,KAGJ/N,cAAA,OAAkBiC,UAAU,mBAAkBqB,SAC5CN,eAAA,UAAQf,UAAU,mFAAkFqB,SAAA,CAClGN,eAAA,OAAKf,UAAU,qCAAoCqB,SAAA,CACjDtD,cAAA,KACEoO,KAAK,IACLnM,UAAU,2DAIZjC,cAAA,QAAMiC,UAAU,aAAYqB,SAAC,0BAE/BN,eAAA,MAAIf,UAAU,wDAAuDqB,SAAA,CACnEtD,cAAA,MAAkBiC,UAAU,OAAMqB,SAChCtD,cAAA,KAAGiC,UAAU,aAAamM,KAAK,OADzB,WAKRpO,cAAA,MAAoBiC,UAAU,OAAMqB,SAClCtD,cAAA,KAAGiC,UAAU,aAAamM,KAAK,OADzB,aAKRpO,cAAA,MAAmBiC,UAAU,OAAMqB,SACjCtD,cAAA,KAAGiC,UAAU,aAAamM,KAAK,OADzB,mBAtBL,aC5bA4E,OARf,WACE,OACEhT,cAAA,OAAKW,GAAG,OAAM2C,SACZtD,cAAC2Q,GAAQ,OCCf,MAAM5D,GAAU,CAEd3I,SAAU6O,IAAUC,cACpB3S,QAAS,IACT6I,OAAQ,OAER+J,WAAYC,IAAYC,OAGpBC,GAAOA,IACXtT,cAACsM,IAAMiH,WAAU,CAAAjQ,SACftD,cAACwT,IAAa,CAACC,SAAUC,OAAmB3G,GAAOzJ,SAQjDtD,cAACgT,GAAG,QAKVW,IAAS5M,OAAO/G,cAACsT,GAAI,IAAK1O,SAASC,eAAe,U,iBChClD,MAAMzF,EAAUwU,mIAAYC,gCACxB,wBACA,wBACJC,EAAOC,QAAU,CACf3U,UACAwO,MAAM,GAADnN,OAAKrB,EAAO,qBACjByO,OAAO,GAADpN,OAAKrB,EAAO,oBAClB0O,IAAI,GAADrN,OAAKrB,EAAO,iBACfsJ,KAAK,GAADjI,OAAKrB,EAAO,aAChBsB,MAAM,GAADD,OAAKrB,EAAO,eACjB4U,QAAS,CACP,CACE9O,MAAO,gEACPkF,KAAM,oIACNkE,OAAQ,2BACR9K,MAAO,2DACPyQ,SAAWC,QAKfvG,QAAS,CACP,CACEzI,MAAO,aACPkF,KAAM,2QACNkE,OAAQ,oDACR9K,MACE,8GACF6K,OAAQ,iCAEV,CACEnJ,MAAO,cACPkF,KAAM,gJACNkE,OAAQ,oDACR9K,MACE,6GACF6K,OAAQ,iCAEV,CACEnJ,MAAO,WACPkF,KAAM,6MACNkE,OAAQ,oDACR9K,MACE,8GACF6K,OAAQ,iCAEV,CACEnJ,MAAO,mBACPkF,KAAM,oLACNkE,OAAQ,oDACR9K,MACE,oGACF6K,OAAQ,oC,gCCpDd,oEAEO,SAAS/O,EAAQyI,GACtB,OAAOyD,IAAMkF,IAAI3I,EAAK,CACpB4D,iBAAiB,M","file":"static/js/main.3747c961.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, Button, FormCheck, Form } from \"react-bootstrap\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst { backend } = require(\"../../../data\");\r\nconst { getData } = require(\"../../api/getData\");\r\n\r\nexport default function MusicCard(props) {\r\n  const alert = useAlert();\r\n  const [songData, setSongData] = useState(null);\r\n  const [filters, setFilters] = useState(<div></div>);\r\n  const [volume, setVolume] = useState(50);\r\n  const [displayedContacts, setDisplayedContacts] = useState([]);\r\n\r\n  function playSong() {\r\n    if (songData) {\r\n      alert.show(\"التشغيل جارٍ والرجاء الإنتظار\", {\r\n        timeout: 3 * 2000,\r\n        type: \"success\",\r\n      });\r\n      getData(\r\n        backend +\r\n          `/api/guilds/${props.guild.id}/music/play?songName=${songData.songName}`\r\n      )\r\n        .then(({ data }) => {\r\n          alert.show(data.message, {\r\n            timeout: 5 * 2000,\r\n            type: \"success\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          if (err)\r\n            alert.show(err.response.data.message.toString(), {\r\n              timeout: 5 * 2000,\r\n              type: \"error\",\r\n            });\r\n        });\r\n    } else\r\n      return alert.show(\"يرجى كتابة أسم الأغنية\", {\r\n        timeout: 5 * 2000,\r\n        type: \"info\",\r\n      });\r\n  }\r\n\r\n  function spv(task) {\r\n    getData(backend + `/api/guilds/${props.guild.id}/music/${task}`)\r\n      .then(({ data }) => {\r\n        alert.show(data.message, {\r\n          timeout: 5 * 2000,\r\n          type: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err)\r\n          alert.show(err.response.data.message.toString(), {\r\n            timeout: 5 * 2000,\r\n            type: \"error\",\r\n          });\r\n      });\r\n  }\r\n\r\n  function autoPlay(e) {\r\n    getData(backend + `/api/guilds/${props.guild.id}/music/autoPlay`)\r\n      .then(({ data }) => {\r\n        data.autoPlay ? (e.target.checked = true) : (e.target.checked = false);\r\n        alert.show(data.message, {\r\n          timeout: 5 * 2000,\r\n          type: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err) {\r\n          e.target.checked = false;\r\n          alert.show(err.response.data.message.toString(), {\r\n            timeout: 5 * 2000,\r\n            type: \"error\",\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    function filtersFunction(e, filter) {\r\n      getData(\r\n        backend + `/api/guilds/${props.guild.id}/music/filter?filter=${filter}`\r\n      )\r\n        .then(({ data }) => {\r\n          data.status ? (e.target.checked = true) : (e.target.checked = false);\r\n          alert.show(data.message, {\r\n            timeout: 5 * 2000,\r\n            type: \"success\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          if (err) {\r\n            e.target.checked = false;\r\n            alert.show(err.response.data.message.toString(), {\r\n              timeout: 5 * 2000,\r\n              type: \"error\",\r\n            });\r\n          }\r\n        });\r\n    }\r\n    getData(backend + `/api/user/filters`).then(({ data }) => {\r\n      setFilters(\r\n        Object.keys(data).map((filter) => {\r\n          return (\r\n            <FormCheck\r\n              key={filter}\r\n              type=\"switch\"\r\n              label={filter}\r\n              value={filter}\r\n              className=\"m-2\"\r\n              id={filter + \"-switch\"}\r\n              onChange={(e) => {\r\n                filtersFunction(e, e.target.value);\r\n              }}\r\n              style={{\r\n                display: \"inline-block\",\r\n                border: \"solid\",\r\n                borderStyle: \"groove double\",\r\n                borderWidth: \"medium\",\r\n                borderColor: \"#181a1b\",\r\n              }}\r\n            />\r\n          );\r\n        })\r\n      );\r\n    });\r\n  }, [alert, props.guild.id]);\r\n\r\n  let Contact = (data) => {\r\n    return (\r\n      <li\r\n        key={data.key}\r\n        style={\r\n          data.lastOne\r\n            ? {\r\n                overflow: \"hidden\",\r\n                borderBottom: \"1px solid #ccc\",\r\n                padding: \"0 0 20px\",\r\n                margin: \"0\",\r\n              }\r\n            : {\r\n                overflow: \"hidden\",\r\n                margin: \"0 0 20px\",\r\n                borderBottom: \"1px solid #ccc\",\r\n                padding: \"0 0 20px\",\r\n              }\r\n        }\r\n      >\r\n        <img\r\n          key={data.key}\r\n          src={data.image}\r\n          alt={data.name}\r\n          style={{\r\n            float: \"left\",\r\n            display: \"block\",\r\n            width: \"50px\",\r\n            height: \"50px\",\r\n            margin: \"0 10px 0 0\",\r\n          }}\r\n        />\r\n        <span\r\n          key={data.key}\r\n          value={data.name}\r\n          style={{\r\n            display: \"block\",\r\n            width: \"100%\",\r\n            fontWeight: \"bolder\",\r\n            color: \"#999000\",\r\n          }}\r\n        >\r\n          {data.name}\r\n        </span>\r\n        <span\r\n          key={`${data.key}2`}\r\n          style={{\r\n            fontWeight: \"normal\",\r\n            fontStyle: \"italic\",\r\n            color: \"#999\",\r\n          }}\r\n        >\r\n          {data.artist}\r\n        </span>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  let ContactList = () => {\r\n    return (\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"50%\",\r\n          margin: \"50px auto\",\r\n        }}\r\n      >\r\n        <ul\r\n          key={`searchUl`}\r\n          style={{\r\n            listStyleType: \"none\",\r\n            position: \"absolute\",\r\n            width: \"350px\",\r\n          }}\r\n        >\r\n          {displayedContacts.map((el, index) => {\r\n            return (\r\n              <Button\r\n                key={el.id}\r\n                value={el.id}\r\n                style={{ width: \"100%\", backgroundColor: \"white\" }}\r\n                onClick={(e) => {\r\n                  setSongData({ songName: e.currentTarget.value });\r\n                  document.getElementById(\"searchBar\").value =\r\n                    e.currentTarget.value;\r\n                  setDisplayedContacts([]);\r\n                }}\r\n              >\r\n                <Contact\r\n                  style={{ width: \"100%\" }}\r\n                  key={el.id}\r\n                  name={el.name}\r\n                  image={el.image}\r\n                  artist={el.artist}\r\n                  lastOne={index === displayedContacts.length - 1}\r\n                />\r\n              </Button>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <h1>نظام الأغاني</h1>\r\n      <div className=\"input-group mb-3\" key=\"upCard\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"searchBar\"\r\n          className=\"form-control search\"\r\n          defaultValue=\"ضع إسم الأغنية\"\r\n          onChange={(e) => {\r\n            setDisplayedContacts([]);\r\n            (async () => {\r\n              const { data } = await getData(\r\n                backend +\r\n                  `/api/guilds/${props.guild.id}/search/${e.target.value}`\r\n              );\r\n              setDisplayedContacts(\r\n                data.map(({ id, title, artist }) => {\r\n                  return {\r\n                    id,\r\n                    name: title,\r\n                    artist,\r\n                    image: `https://i.ytimg.com/vi/${id}/hqdefault.jpg`,\r\n                  };\r\n                })\r\n              );\r\n            })();\r\n            setSongData({ songName: e.target.value });\r\n          }}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") playSong();\r\n          }}\r\n        />\r\n        <ContactList />\r\n        <div className=\"input-group-append\" key=\"upCard\">\r\n          <button\r\n            onClick={playSong}\r\n            className=\"btn btn-outline-secondary\"\r\n            id=\"button-addon2\"\r\n            type=\"button\"\r\n            key=\"play\"\r\n          >\r\n            بحث\r\n          </button>\r\n          <Button\r\n            onClick={() => {\r\n              spv(\"stop\");\r\n            }}\r\n            className=\"ms-2 mt-1\"\r\n            key=\"stop\"\r\n          >\r\n            إيقاف\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              spv(\"pause\");\r\n            }}\r\n            className=\"ms-2 mt-1\"\r\n            key=\"pause\"\r\n          >\r\n            إيقاف مؤقت\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              spv(\"skip\");\r\n            }}\r\n            className=\"ms-2 mt-1\"\r\n            key=\"skip\"\r\n          >\r\n            تخطي\r\n          </Button>\r\n        </div>\r\n        <div className=\"container-fluid\" key=\"downCard\">\r\n          <FormCheck\r\n            type=\"switch\"\r\n            className=\"m-2 p-2\"\r\n            id=\"autoplay-switch\"\r\n            label=\"التشغيل التلقائي\"\r\n            style={{\r\n              display: \"inline-block\",\r\n            }}\r\n            onChange={(e) => {\r\n              autoPlay(e);\r\n            }}\r\n          />\r\n          <Form.Label>درجة الصوت:</Form.Label>\r\n          <Form.Range\r\n            className=\"p-1\"\r\n            min=\"1\"\r\n            max=\"100\"\r\n            value={volume}\r\n            style={{\r\n              width: \"80%\",\r\n              height: \"0rem\",\r\n              color: \"rgb(40 44 45)\",\r\n            }}\r\n            onChange={(e) => {\r\n              setVolume(e.target.value);\r\n            }}\r\n            onMouseUp={async (e) => {\r\n              spv(`volume?volume=${e.target.value}`);\r\n            }}\r\n          />\r\n          <Form.Label>{volume}%</Form.Label>\r\n        </div>\r\n        <h6 className=\"container-fluid\">\r\n          المرشحات: {filters}\r\n          <Form.Select\r\n            aria-label=\"Default select example\"\r\n            className=\"m-2\"\r\n            style={{\r\n              width: \"50%\",\r\n              display: \"inline-block\",\r\n            }}\r\n            onChange={(e) => {\r\n              spv(`loop?mode=${e.target.value}`);\r\n            }}\r\n          >\r\n            <option value=\"0\" key=\"0\">\r\n              التكرار متوقف\r\n            </option>\r\n            <option value=\"1\" key=\"1\">\r\n              تكرار الأغنية\r\n            </option>\r\n            <option value=\"2\" key=\"2\">\r\n              تكرار القائمة\r\n            </option>\r\n          </Form.Select>\r\n        </h6>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import { Component } from \"react\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nexport default class TransformerComponent extends Component {\r\n  componentDidMount() {\r\n    this.checkNode();\r\n  }\r\n  componentDidUpdate() {\r\n    this.checkNode();\r\n  }\r\n  checkNode() {\r\n    const stage = this.transformer.getStage();\r\n    const { selectedShapeName } = this.props;\r\n    const selectedNode = stage.findOne(\".\" + selectedShapeName);\r\n    if (selectedNode === this.transformer.node()) {\r\n      return;\r\n    }\r\n    if (selectedNode) {\r\n      this.transformer.attachTo(selectedNode);\r\n    } else {\r\n      this.transformer.detach();\r\n    }\r\n    this.transformer.getLayer().batchDraw();\r\n  }\r\n  render() {\r\n    return (\r\n      <Transformer\r\n        ref={(node) => {\r\n          this.transformer = node;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Image as KonvaImage, Stage, Layer, Text, Circle } from \"react-konva\";\r\nimport { Card, Form, Button } from \"react-bootstrap\";\r\nimport TransformerComponent from \"./transformer\";\r\nimport useImage from \"use-image\";\r\nimport axios from \"axios\";\r\n\r\nconst { backend } = require(\"../../../../data\");\r\nconst welcomeTextHint = \"{{name}} {{tag}} {{discordTag}} {{memberCount}}\";\r\nconst BackgroundImage = ({ data }) => {\r\n  const [image] = useImage(data.background);\r\n  return (\r\n    <KonvaImage\r\n      x={0}\r\n      y={0}\r\n      fillPatternImage={image}\r\n      width={image ? image.width : data.width || 720}\r\n      height={image ? image.height : data.height || 480}\r\n    />\r\n  );\r\n};\r\n\r\nexport default class welcomeCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedShapeName: \"Avatar\",\r\n      data: this.props.welcomeImageData,\r\n    };\r\n  }\r\n  getImageSize = async (url) => {\r\n    const img = new Image();\r\n    img.src = url;\r\n    img.addEventListener(\"load\", (e) => {\r\n      const { width, height } = e.currentTarget;\r\n      if (width && height) {\r\n        let state = this.state;\r\n        state.data.StageData.width = width;\r\n        state.data.StageData.height = height;\r\n        this.setState();\r\n        return true;\r\n      }\r\n    });\r\n  };\r\n  handleStageClick = (e) => {\r\n    let state = this.state;\r\n    state.selectedShapeName = e.target.name();\r\n    this.setState(state);\r\n  };\r\n  render() {\r\n    let state = this.state;\r\n    let { data } = state;\r\n    let { TextData } = data;\r\n    let memberCount = this.props.guild ? this.props.guild.memberCount : NaN;\r\n    const discordTag = this.props.user\r\n      ? this.props.user.discordTag\r\n      : \"EXA-BOT™#1076\";\r\n    const [name, tag] = discordTag.split(\"#\");\r\n    const AvatarImg = () => {\r\n      const { AvatarData } = this.state.data;\r\n      const [image] = useImage(this.state.data.AvatarData.url);\r\n      const Shape = this.state.data.AvatarData.circle ? Circle : KonvaImage;\r\n      return (\r\n        <Shape\r\n          name=\"Avatar\"\r\n          draggable\r\n          image={image}\r\n          fillPatternImage={image}\r\n          fillPatternOffset={{\r\n            x: this.state.data.AvatarData.circle\r\n              ? (image\r\n                  ? image.width\r\n                  : this.state.data.AvatarData.width || 128) / 2\r\n              : this.state.data.AvatarData.width,\r\n            y: this.state.data.AvatarData.circle\r\n              ? (image\r\n                  ? image.height\r\n                  : this.state.data.AvatarData.height || 128) / 2\r\n              : this.state.data.AvatarData.height,\r\n          }}\r\n          x={this.state.data.AvatarData.x}\r\n          y={this.state.data.AvatarData.y}\r\n          offset={\r\n            this.state.data.AvatarData.circle\r\n              ? {\r\n                  x: 0,\r\n                  y: 0,\r\n                }\r\n              : {\r\n                  x: parseInt(this.state.data.AvatarData.width) / 2,\r\n                  y: parseInt(this.state.data.AvatarData.height) / 2,\r\n                }\r\n          }\r\n          width={this.state.data.AvatarData.width || 128}\r\n          height={this.state.data.AvatarData.height || 128}\r\n          scaleX={this.state.data.AvatarData.scaleX}\r\n          scaleY={this.state.data.AvatarData.scaleY}\r\n          rotation={this.state.data.AvatarData.rotation}\r\n          cornerRadius={20}\r\n          onDragEnd={(e) => {\r\n            const { x, y } = e.target.attrs;\r\n            Object.keys({ x, y }).forEach((key) => {\r\n              const avatarData = {\r\n                x,\r\n                y,\r\n              };\r\n              AvatarData[key] = avatarData[key];\r\n            });\r\n            this.setState(state.data);\r\n          }}\r\n          onTransformEnd={(e) => {\r\n            const { x, y, rotation, scaleX, scaleY } = e.target.attrs;\r\n            Object.keys({\r\n              x,\r\n              y,\r\n              scaleX,\r\n              scaleY,\r\n              rotation,\r\n            }).forEach((key) => {\r\n              const avatarData = {\r\n                x,\r\n                y,\r\n                scaleX,\r\n                scaleY,\r\n                rotation,\r\n              };\r\n              AvatarData[key] = avatarData[key];\r\n            });\r\n            this.setState(state.data);\r\n          }}\r\n        />\r\n      );\r\n    };\r\n    return (\r\n      <Card>\r\n        <div dir=\"rtl\" className=\"pt-25\" align=\"center\">\r\n          <Stage\r\n            onClick={this.handleStageClick}\r\n            width={this.state.data.StageData.width}\r\n            height={this.state.data.StageData.height}\r\n          >\r\n            <Layer>\r\n              <BackgroundImage data={this.state.data.StageData} />\r\n              <Text\r\n                name=\"text\"\r\n                draggable\r\n                text={TextData.text\r\n                  .replace(\"{{discordTag}}\", discordTag)\r\n                  .replace(\"{{name}}\", name)\r\n                  .replace(\"{{tag}}\", tag)\r\n                  .replace(\"{{memberCount}}\", memberCount)}\r\n                x={TextData.x}\r\n                y={TextData.y}\r\n                fill={TextData.fill}\r\n                fontSize={TextData.fontSize}\r\n                scaleX={TextData.scaleX}\r\n                scaleY={TextData.scaleY}\r\n                fontFamily=\"sans\"\r\n                onDragEnd={(e) => {\r\n                  console.log(e);\r\n                  state.data.TextData.x = e.target.attrs.x;\r\n                  state.data.TextData.y = e.target.attrs.y;\r\n                  this.setState(state);\r\n                }}\r\n                rotation={this.state.data.TextData.rotation}\r\n                onTransformEnd={(e) => {\r\n                  const { x, y, scaleX, scaleY, rotation } = e.target.attrs;\r\n                  Object.keys({ x, y, scaleX, scaleY, rotation }).forEach(\r\n                    (key) => {\r\n                      const textData = {\r\n                        x,\r\n                        y,\r\n                        scaleX: scaleX,\r\n                        scaleY: scaleY,\r\n                        rotation,\r\n                      };\r\n                      TextData[key] = textData[key];\r\n                    }\r\n                  );\r\n                  this.setState(state.data);\r\n                }}\r\n              />\r\n              <AvatarImg />\r\n              <TransformerComponent\r\n                selectedShapeName={this.state.selectedShapeName}\r\n              />\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n        <div className=\"my-3\">\r\n          <label htmlFor=\"backgroundImg\" className=\"form-label\">\r\n            رفع صورة خلفية من جهازك الشخصي\r\n          </label>\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"file\"\r\n            id=\"backgroundImg\"\r\n            accept=\"image/png, image/jpeg\"\r\n            style={{\r\n              color: \"WHITE\",\r\n            }}\r\n            onChange={(e) => {\r\n              const image = e.target.files.item(0);\r\n              const fileTypes = [\r\n                \"image/apng\",\r\n                \"image/bmp\",\r\n                \"image/gif\",\r\n                \"image/jpeg\",\r\n                \"image/pjpeg\",\r\n                \"image/png\",\r\n                \"image/svg+xml\",\r\n                \"image/tiff\",\r\n                \"image/webp\",\r\n                \"image/x-icon\",\r\n              ];\r\n              if (fileTypes.includes(image.type)) {\r\n                const imageUrl = URL.createObjectURL(image);\r\n                if (!imageUrl || imageUrl.length < 0) return;\r\n                state.data.StageData.background = imageUrl;\r\n                this.setState(state);\r\n                this.getImageSize(imageUrl).then((sized) => {\r\n                  if (!sized) e.target.style.color = \"WHITE\";\r\n                  else e.target.style.color = \"RED\";\r\n                });\r\n              } else e.target.style.color = \"RED\";\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.StageData.background}\r\n            style={{ color: \"WHITE\" }}\r\n            onChange={(e) => {\r\n              if (!e.target.value || e.target.value.length < 0)\r\n                return (e.target.style.color = \"RED\");\r\n              state.data.StageData.background = e.target.value;\r\n              this.setState(state);\r\n              this.getImageSize(e.target.value).then((sized) => {\r\n                if (!sized) e.target.style.color = \"WHITE\";\r\n                else e.target.style.color = \"RED\";\r\n              });\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"رابط صورة الخلفية\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            \"رابط صورة الخلفية\"\r\n          </span>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.AvatarData.x}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value);\r\n              state.data.AvatarData.x = value || state.data.AvatarData.x;\r\n              this.setState(state);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"البعد الأفقي لصورة العضو\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            \"البعد الأفقي لصورة العضو\"\r\n          </span>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.AvatarData.y}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value);\r\n              state.data.AvatarData.y = value || state.data.AvatarData.y;\r\n              this.setState(state);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"البعد الرئسي لصورة العضو\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            \"البعد الرئسي لصورة العضو\"\r\n          </span>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.AvatarData.scaleX}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value);\r\n              state.data.AvatarData.scaleX =\r\n                value || state.data.AvatarData.scaleX;\r\n              this.setState(state);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"عرض لصورة العضو\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            \"عرض صورة العضو\"\r\n          </span>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.AvatarData.scaleY}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value);\r\n              state.data.AvatarData.scaleY =\r\n                value || state.data.AvatarData.scaleY;\r\n              this.setState(state);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"طول لصورة العضو\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            \"طول صورة العضو\"\r\n          </span>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.AvatarData.rotation}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value);\r\n              state.data.AvatarData.rotation =\r\n                value || state.data.AvatarData.rotation;\r\n              this.setState(state);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"محور لصورة العضو\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            <Form>\r\n              <Form.Check\r\n                label=\" \"\r\n                type=\"switch\"\r\n                id=\"circleSwitch\"\r\n                checked={this.state.data.AvatarData.circle}\r\n                onChange={(e) => {\r\n                  state.data.AvatarData.circle = e.target.checked;\r\n                  this.setState(state);\r\n                }}\r\n              />\r\n            </Form>\r\n            \"محور صورة العضو\"\r\n          </span>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.TextData.x}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value);\r\n              state.data.TextData.x = value || state.data.TextData.x;\r\n              this.setState(state);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"البعد الأفقى لنص الترحيب\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            \"البعد الأفقى لنص الترحيب\"\r\n          </span>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.TextData.y}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value);\r\n              state.data.TextData.y = value || state.data.TextData.y;\r\n              this.setState(state);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"البعد الرئسي لنص الترحيب\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            \"البعد الرئسي لنص الترحيب\"\r\n          </span>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.TextData.scaleX}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value);\r\n              state.data.TextData.scaleX = value || state.data.TextData.scaleX;\r\n              this.setState(state);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"عرض نص الترحيب\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            \"عرض نص الترحيب\"\r\n          </span>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.TextData.scaleY}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value);\r\n              state.data.TextData.scaleY = value || state.data.TextData.scaleY;\r\n              this.setState(state);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"طول نص الترحيب\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            \"طول نص الترحيب\"\r\n          </span>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.TextData.fontSize}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value);\r\n              state.data.TextData.fontSize =\r\n                value || state.data.TextData.fontSize;\r\n              this.setState(state);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"حجم نص الترحيب\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            \"حجم نص الترحيب\"\r\n          </span>\r\n        </div>\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            value={this.state.data.TextData.rotation}\r\n            onChange={(e) => {\r\n              const value = parseInt(e.target.value);\r\n              state.data.TextData.rotation =\r\n                value || state.data.TextData.rotation;\r\n              this.setState(state);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"محور نص الترحيب\"\r\n          />\r\n          <span className=\"input-group-text\" id=\"basic-addon2\">\r\n            \"محور نص الترحيب\"\r\n          </span>\r\n        </div>\r\n        <div className=\"form-group mb-3\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              value={this.state.data.TextData.text}\r\n              onChange={async (e) => {\r\n                state.data.TextData.text = e.target.value;\r\n                this.setState(state);\r\n              }}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"نص الترحيب\"\r\n              aria-describedby=\"welcomeTextHelp\"\r\n              id=\"welcomeTextHelp\"\r\n            />\r\n            <span className=\"input-group-text\" id=\"basic-addon2\">\r\n              <input\r\n                type=\"color\"\r\n                value={state.data.TextData.fill}\r\n                onChange={(e) => {\r\n                  state.data.TextData.fill = e.currentTarget.value;\r\n                  this.setState(state);\r\n                }}\r\n              />\r\n              \"نص الترحيب\"\r\n            </span>\r\n          </div>\r\n          <small id=\"welcomeTextHelp\" className=\"form-text text-muted\">\r\n            {welcomeTextHint}\r\n          </small>\r\n        </div>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={async () => {\r\n            await axios({\r\n              headers: {},\r\n              method: \"POST\",\r\n              data: this.state.data,\r\n              withCredentials: true,\r\n              url: backend + `/api/guilds/${this.props.guild.id}/welcome`,\r\n            })\r\n              .then(({ data }) => {\r\n                this.props.alert.show(data.message, {\r\n                  timeout: 5 * 2000,\r\n                  type: \"success\",\r\n                });\r\n              })\r\n              .catch((err) => {\r\n                if (err) {\r\n                  this.props.alert.show(err.response.data.message.toString(), {\r\n                    timeout: 5 * 2000,\r\n                    type: \"error\",\r\n                  });\r\n                }\r\n              });\r\n          }}\r\n        >\r\n          حفظ.\r\n        </Button>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport WelcomeImage from \"./helpers/welcomeImage\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst { backend } = require(\"../../../data\");\r\nconst { getData } = require(\"../../api/getData\");\r\n\r\nexport default function MusicCard(props) {\r\n  const alert = useAlert();\r\n  const [welcomeImageData, setWelcomeImageData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getData(`${backend}/api/guilds/${props.guild.id}/welcome`).then(\r\n      ({ data }) => {\r\n        if (Object.keys(data).length) setWelcomeImageData(data);\r\n        else\r\n          setWelcomeImageData({\r\n            StageData: {\r\n              width: 720,\r\n              height: 480,\r\n              background:\r\n                \"https://cdn.discordapp.com/attachments/865036175705112596/919683698851479592/20191115_213644.png\",\r\n            },\r\n            AvatarData: {\r\n              url: props.user\r\n                ? props.user.avatarURL\r\n                : \"https://cdn.discordapp.com/attachments/865036175705112596/947510772689420378/EXA.png\",\r\n              x: 60,\r\n              y: 120,\r\n              width: 128,\r\n              height: 128,\r\n              scaleX: 1,\r\n              scaleY: 1,\r\n              rotation: 0,\r\n              circle: true,\r\n            },\r\n            TextData: {\r\n              text: props.user ? \"{{discordTag}}\" : \"EXA-BOT™#1076\",\r\n              x: 60,\r\n              y: 120,\r\n              fontSize: 12,\r\n              rotation: 0,\r\n              scaleX: 1,\r\n              scaleY: 1,\r\n              fill: \"#ffff00\",\r\n            },\r\n          });\r\n      }\r\n    );\r\n  }, [props.guild.id, props.user]);\r\n\r\n  return (\r\n    <>\r\n      {welcomeImageData ? (\r\n        <WelcomeImage\r\n          guild={props.guild}\r\n          user={props.user}\r\n          alert={alert}\r\n          welcomeImageData={welcomeImageData}\r\n        />\r\n      ) : (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">جار جلب المعلومات المطلوبة...</span>\r\n        </Spinner>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nconst { backend } = require(\"../../../data\");\r\nconst { getData } = require(\"../../api/getData\");\r\n\r\nexport default class LineChart extends Component {\r\n  chartRef = React.createRef();\r\n\r\n  async componentDidMount() {\r\n    const ctx = this.chartRef.current.getContext(\"2d\");\r\n\r\n    const labelsData = await getData(\r\n      backend + `/api/guilds/${this.props.guild.id}/logs/${this.props.type}`\r\n    );\r\n\r\n    new Chart(ctx, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: labelsData.data.labels,\r\n        datasets: [\r\n          {\r\n            data: labelsData.data.data,\r\n            label: `عدد ال${this.props.name}`,\r\n            borderColor: \"#3e95cd\",\r\n            backgroundColor: \"#7bb6dd\",\r\n            fill: false,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        interaction: {\r\n          mode: \"index\",\r\n          intersect: false,\r\n        },\r\n        stacked: false,\r\n        plugins: {\r\n          title: {\r\n            display: true,\r\n            text: `معلومات متنوعة عن ال${this.props.name} في الخادم - (${this.props.type})`,\r\n          },\r\n        },\r\n        scales: {\r\n          y: {\r\n            type: \"linear\",\r\n            display: true,\r\n            position: \"left\",\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card key={this.props.type}>\r\n        معلومات المجتمع: {this.props.guild.name}\r\n        <div>\r\n          <canvas id=\"myChart\" ref={this.chartRef} />\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Spinner, Carousel } from \"react-bootstrap\";\r\nimport Chart from \"./chart\";\r\n\r\nconst { backend } = require(\"../../../data\");\r\nconst { getData } = require(\"../../api/getData\");\r\n\r\nfunction render(types, props) {\r\n  if (types) {\r\n    return Object.keys(types).map((type) => (\r\n      <Carousel.Item key={type}>\r\n        <Chart guild={props.guild} type={type} name={types[type]} />\r\n      </Carousel.Item>\r\n    ));\r\n  } else\r\n    return (\r\n      <Spinner animation=\"border\" role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    );\r\n}\r\n\r\nexport default function LineChart(props) {\r\n  const [types, setTypes] = useState();\r\n\r\n  useEffect(() => {\r\n    getData(backend + `/api/guilds/${props.guild.id}/logs`).then(({ data }) => {\r\n      setTypes(data);\r\n    });\r\n  }, [props.guild.id]);\r\n\r\n  return (\r\n    <Card>\r\n      <Carousel>{render(types, props)}</Carousel>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Button,\r\n  Dropdown,\r\n  FormControl,\r\n  Tab,\r\n  Row,\r\n  Nav,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport MusicCard from \"./guildSettings/musicCard\";\r\nimport WelcomeCard from \"./guildSettings/welcomeCard\";\r\nimport { Switch, useDarkreader } from \"react-darkreader\";\r\nimport Graphs from \"./charts/charts\";\r\nimport { useAlert } from \"react-alert\";\r\n\r\nconst {\r\n  servers,\r\n  login,\r\n  user,\r\n  logout,\r\n  guild,\r\n  add,\r\n  backend,\r\n} = require(\"../../data\");\r\nconst { getData } = require(\"../api/getData\");\r\n\r\nconst cards = servers.map((server) => {\r\n  return (\r\n    <div className=\"column\" key={server.title}>\r\n      <Card className=\"card\">\r\n        <Card.Img variant=\"top\" src={server.image} alt={server.title} />\r\n        <Card.Body>\r\n          <Card.Title>{server.title}</Card.Title>\r\n          <Card.Text>{server.text}</Card.Text>\r\n          <Button variant=\"primary\" href={server.invite} target=\"_blank\">\r\n            {server.button}\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n});\r\n\r\nfunction guildsIcons(guilds) {\r\n  return guilds.map((guildData) => {\r\n    return (\r\n      <div key={guildData.id} className=\"column p-5\">\r\n        <div className=\"card\">\r\n          <img\r\n            className=\"circular--square card\"\r\n            src={\r\n              guildData.icon\r\n                ? `https://cdn.discordapp.com/icons/${guildData.id}/${guildData.icon}.png?size=2048`\r\n                : \"https://cdn.discordapp.com/avatars/865052410841792532/c9d03e1001a8cee703e486f810623533.png?size=2048\"\r\n            }\r\n            alt={guildData.name}\r\n          />\r\n          <Button\r\n            className=\"top p-2 m-2\"\r\n            href={`?guild=${guildData.id}`}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            {guildData.name}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nfunction guildsMenu(guildData, guilds) {\r\n  // The forwardRef is important!!\r\n  // Dropdown needs access to the DOM node in order to position the Menu\r\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n    <a\r\n      href=\"/\"\r\n      ref={ref}\r\n      style={{ textDecoration: \"none\" }}\r\n      onClick={(e) => {\r\n        e.preventDefault();\r\n        onClick(e);\r\n      }}\r\n    >\r\n      {children}\r\n      &#x25bc;\r\n    </a>\r\n  ));\r\n  // forwardRef again here!\r\n  // Dropdown needs access to the DOM of the Menu to measure it\r\n  const CustomMenu = React.forwardRef(\r\n    ({ children, style, className, \"aria-labelledby\": labeledBy }, ref) => {\r\n      const [value, setValue] = useState(\"\");\r\n      return (\r\n        <div\r\n          ref={ref}\r\n          style={style}\r\n          className={className}\r\n          aria-labelledby={labeledBy}\r\n        >\r\n          <FormControl\r\n            autoFocus\r\n            className=\"mx-3 my-2 w-auto\"\r\n            placeholder=\"أبحث عن مجتمعك...\"\r\n            onChange={(e) => setValue(e.target.value)}\r\n            value={value}\r\n          />\r\n          <ul\r\n            className=\"list-unstyled\"\r\n            style={{\r\n              maxHeight: \"250px\",\r\n              overflow: \"auto\",\r\n            }}\r\n          >\r\n            {React.Children.toArray(children).filter(\r\n              (child) =>\r\n                !value || child.props.children.toLowerCase().startsWith(value)\r\n            )}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  );\r\n  let num = 0;\r\n  const guildsMenu = guilds.map((menuGuildData) => {\r\n    if (menuGuildData.id === guildData.id) {\r\n      return (\r\n        <Dropdown.Item eventKey={`${++num}`} key={menuGuildData.id} active>\r\n          {menuGuildData.name}\r\n        </Dropdown.Item>\r\n      );\r\n    } else {\r\n      return (\r\n        <Dropdown.Item\r\n          key={`${++num}`}\r\n          eventKey={`${++num}`}\r\n          onClick={() => (window.location.href = \"/?guild=\" + menuGuildData.id)}\r\n        >\r\n          {menuGuildData.name}\r\n        </Dropdown.Item>\r\n      );\r\n    }\r\n  });\r\n  return (\r\n    <Dropdown>\r\n      <Dropdown.Toggle\r\n        as={CustomToggle}\r\n        variant=\"success\"\r\n        id=\"dropdown-custom-components\"\r\n      >\r\n        {guildData.name}\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu as={CustomMenu}>{guildsMenu}</Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n}\r\n\r\nconst loginUrl = () => (window.location.href = login);\r\nconst logoutUrl = () => (window.location.href = logout);\r\n\r\n// window.open(logout, \"logout Pop Up\", \"width=500,height=\" + window.innerHeight);\r\n\r\nconst params = new URLSearchParams(window.location.search);\r\nconst guildID = params.get(\"guild\");\r\n\r\nexport default function MainPage(props) {\r\n  const alert = useAlert();\r\n\r\n  const theme = localStorage.getItem(\"Theme\") === \"true\" ? true : false;\r\n  const [isDark, { toggle }] = useDarkreader(theme);\r\n  const [userData, setUserData] = useState(null);\r\n  const [guildData, setGuildData] = useState(null);\r\n  const [guilds, setGuilds] = useState(<h1>لا يوجد مجتمعات</h1>);\r\n  const [guildSettingsData, setGuildSettingsData] = useState({ prefix: \".\" });\r\n  const [guildBody, setGuildBody] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getData(user)\r\n      .then(({ data }) => {\r\n        setUserData(data);\r\n      })\r\n      .catch((err) => {\r\n        if (err) {\r\n          console.log(err);\r\n          alert.show(\"لم يتم تسجيل الدخول\", {\r\n            timeout: 5000,\r\n            type: \"error\",\r\n          });\r\n        }\r\n      });\r\n  }, [alert]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const guildsData = (await userData) ? await userData.guilds : [];\r\n      setGuilds(guildsData);\r\n    })();\r\n  }, [userData]);\r\n\r\n  useEffect(() => {\r\n    if (guildID) {\r\n      getData(guild + `/${guildID}`)\r\n        .then(({ data }) => {\r\n          setGuildData(data);\r\n        })\r\n        .catch((err) => {\r\n          if (err) {\r\n            console.log(err);\r\n            alert.show(\"لم يتم العثور على المجتمع في قاعدة البيانات\", {\r\n              timeout: 5000,\r\n              type: \"error\",\r\n            });\r\n            window.open(\r\n              add + `?guildID=${guildID}`,\r\n              \"add Pop Up\",\r\n              \"width=500,height=\" + window.innerHeight\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }, [alert]);\r\n\r\n  useEffect(() => {\r\n    if (!guildID) return;\r\n    getData(backend + `/api/guilds/${guildID}/prefix/get`)\r\n      .then(({ data }) => {\r\n        setGuildSettingsData({ prefix: data.prefix.prefix || \".\" });\r\n        setGuildBody(true);\r\n      })\r\n      .catch((err) => {\r\n        if (err) {\r\n          console.error(err);\r\n          alert.show(\"لا توجد بادئة للمجتمع\", {\r\n            timeout: 5000,\r\n            type: \"error\",\r\n          });\r\n          setGuildBody(null);\r\n        }\r\n      });\r\n  }, [alert]);\r\n\r\n  function setPrefix() {\r\n    getData(\r\n      backend +\r\n        `/api/guilds/${guildID}/prefix/set?prefix=${guildSettingsData.prefix}`\r\n    )\r\n      .then(({ data }) => {\r\n        setGuildSettingsData({ prefix: data });\r\n        alert.show(\"تم بنجاح\", {\r\n          timeout: 5000,\r\n          type: \"success\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        if (err)\r\n          alert.show(\"خطأ\", {\r\n            timeout: 5000,\r\n            type: \"error\",\r\n          });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"p-3 bg-dark bg-opacity-50 text-white\">\r\n        <div className=\"container\">\r\n          <div className=\"d-flex flex-wrap align-items-center justify-content-center justify-content-lg-start\">\r\n            <a\r\n              href=\"/\"\r\n              className=\"d-flex align-items-center mb-2 mb-lg-0 text-white text-decoration-none\"\r\n            >\r\n              {/* <svg\r\n                  className=\"bi me-2\"\r\n                  width=\"40\"\r\n                  height=\"32\"\r\n                  role=\"img\"\r\n                  aria-label=\"Bootstrap\"\r\n                >\r\n                  <use xlink:href=\"#bootstrap\"></use>\r\n                </svg> */}\r\n            </a>\r\n            <ul className=\"nav col-12 col-lg-auto me-lg-auto mb-2 justify-content-center mb-md-0\">\r\n              <li key=\"Home\">\r\n                <a key=\"Home\" href=\"/\" className=\"nav-link px-2 text-white\">\r\n                  الصفحة الرئيسية\r\n                </a>\r\n              </li>\r\n              <li key=\"GitHub\">\r\n                <a\r\n                  key=\"GitHub\"\r\n                  href=\"https://github.com/EXA-Hub/EXABOT\"\r\n                  className=\"nav-link px-2 text-white\"\r\n                >\r\n                  المشروع\r\n                </a>\r\n              </li>\r\n              <li key=\"Support\">\r\n                <a\r\n                  key=\"Support\"\r\n                  href=\"https://discord.gg/n9AQZ6qjNc\"\r\n                  className=\"nav-link px-2 text-white\"\r\n                >\r\n                  الدعم الفني\r\n                </a>\r\n              </li>\r\n              <li key=\"Studio\">\r\n                <a\r\n                  key=\"Studio\"\r\n                  href=\"https://discord.gg/aEkKZQfZuk\"\r\n                  className=\"nav-link px-2 text-white\"\r\n                >\r\n                  فريق التطوير\r\n                </a>\r\n              </li>\r\n              <li key=\"who\">\r\n                <a\r\n                  key=\"who\"\r\n                  href=\"https://discord.gg/e4ewVXcKCs\"\r\n                  className=\"nav-link px-2 text-white\"\r\n                >\r\n                  من نحن؟\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <Switch\r\n              checked={isDark}\r\n              onChange={(e) => {\r\n                toggle();\r\n                localStorage.setItem(\"Theme\", isDark ? false : true);\r\n              }}\r\n            />\r\n            <div className=\"text-end p-1 m-1\">\r\n              {userData ? (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-danger me-2\"\r\n                  onClick={logoutUrl}\r\n                >\r\n                  تسجيل الخروج\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-outline-success me-2\"\r\n                  onClick={loginUrl}\r\n                >\r\n                  تسجيل الدخول\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <h1 className=\"container-fluid fs-1 badge text-muted\">\r\n        {userData ? userData.discordTag : \"EXA-BOT™\"}\r\n        <p\r\n          style={{\r\n            fontFamily: \"Michroma, sans-serif\",\r\n          }}\r\n        >\r\n          <span style={{ color: \"lime\" }} className=\"flick\">\r\n            ${userData ? userData.coins : \"0\"}\r\n          </span>\r\n        </p>\r\n      </h1>\r\n      <div\r\n        className=\"text-dark text-muted row\"\r\n        style={{\r\n          marginRight: \"0px\",\r\n          marginLeft: \"0px\",\r\n        }}\r\n      >\r\n        {guildData ? (\r\n          <div key=\"guilds\">\r\n            <div\r\n              key=\"guildsMenu\"\r\n              className=\"container-fluid fs-1 badge text-muted\"\r\n            >\r\n              {guildsMenu(guildData, guilds)}\r\n            </div>\r\n            {guildBody ? (\r\n              <div key=\"guildBody\">\r\n                <div className=\"container-fluid fs-5 badge\">\r\n                  <input\r\n                    style={{ width: \"50%\" }}\r\n                    defaultValue={guildSettingsData.prefix || \".\"}\r\n                    onChange={(e) =>\r\n                      setGuildSettingsData({ prefix: e.target.value })\r\n                    }\r\n                  ></input>\r\n                  <Button className=\"m-2\" onClick={setPrefix}>\r\n                    حفظ البادئة\r\n                  </Button>\r\n                </div>\r\n                <Tab.Container\r\n                  id=\"left-tabs-example\"\r\n                  defaultActiveKey=\"Data\"\r\n                  key=\"TabContainer\"\r\n                >\r\n                  <Row>\r\n                    <Col sm={3} key=\"sm3\">\r\n                      <Nav variant=\"pills\" className=\"flex-column\">\r\n                        <Nav.Item key=\"data\">\r\n                          <Nav.Link eventKey=\"Data\" key=\"data\">\r\n                            معلومات المجتمع\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item key=\"MusicCard\">\r\n                          <Nav.Link eventKey=\"MusicCard\" key=\"MusicCard\">\r\n                            الموسيقى\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item key=\"welcomeCard\">\r\n                          <Nav.Link eventKey=\"welcomeCard\" key=\"welcomeCard\">\r\n                            تعديل الترحيب\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item key=\"second\">\r\n                          <Nav.Link eventKey=\"second\" key=\"second\">\r\n                            آخر\r\n                          </Nav.Link>\r\n                        </Nav.Item>\r\n                      </Nav>\r\n                    </Col>\r\n                    <Col sm={9} key=\"sm9\">\r\n                      <Tab.Content key=\"TabContent\">\r\n                        <Tab.Pane eventKey=\"Data\" key=\"data\">\r\n                          <Graphs guild={guildData} />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"MusicCard\" key=\"MusicCard\">\r\n                          <div key=\"MusicCard\">\r\n                            <MusicCard guild={guildData} />\r\n                          </div>\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"welcomeCard\" key=\"welcomeCard\">\r\n                          <WelcomeCard guild={guildData} user={userData} />\r\n                        </Tab.Pane>\r\n                        <Tab.Pane eventKey=\"second\" key=\"second\">\r\n                          مرحبا\r\n                        </Tab.Pane>\r\n                      </Tab.Content>\r\n                    </Col>\r\n                  </Row>\r\n                </Tab.Container>\r\n              </div>\r\n            ) : (\r\n              <h1>× حدث خطأ ما ×</h1>\r\n            )}\r\n          </div>\r\n        ) : userData ? (\r\n          guildsIcons(guilds)\r\n        ) : (\r\n          cards\r\n        )}\r\n      </div>\r\n      <div key=\"footer\" className=\"container bottom\">\r\n        <footer className=\"d-flex flex-wrap justify-content-between align-items-center py-3 my-4 border-top\">\r\n          <div className=\"col-md-4 d-flex align-items-center\">\r\n            <a\r\n              href=\"/\"\r\n              className=\"mb-3 me-2 mb-md-0 text-muted text-decoration-none lh-1\"\r\n            >\r\n              {/*<svg className=\"bi\" width=\"30\" height=\"24\"><use xlink:href=\"#bootstrap\"></use></svg>*/}\r\n            </a>\r\n            <span className=\"text-muted\">© 2021 EXA, Inc</span>\r\n          </div>\r\n          <ul className=\"nav col-md-4 justify-content-end list-unstyled d-flex\">\r\n            <li key=\"twitter\" className=\"ms-3\">\r\n              <a className=\"text-muted\" href=\"/\">\r\n                {/*<svg className=\"bi\" width=\"24\" height=\"24\"><use xlink:href=\"#twitter\"></use></svg>*/}\r\n              </a>\r\n            </li>\r\n            <li key=\"instagram\" className=\"ms-3\">\r\n              <a className=\"text-muted\" href=\"/\">\r\n                {/*<svg className=\"bi\" width=\"24\" height=\"24\"><use xlink:href=\"#instagram\"></use></svg>*/}\r\n              </a>\r\n            </li>\r\n            <li key=\"facebook\" className=\"ms-3\">\r\n              <a className=\"text-muted\" href=\"/\">\r\n                {/*<svg className=\"bi\" width=\"24\" height=\"24\"><use xlink:href=\"#facebook\"></use></svg>*/}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MainPage from \"./components/MainPage/MainPage\";\n\nfunction App() {\n  return (\n    <div id=\"body\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n\n// كُلَّما تعلّقتَ بِشخصٍ تعلُّقًا أذاقكَ اللهُ مُرَّ التَّعلق، لِتعلمَ أنَّ اللهَ يغارُ على قلبٍ تَعلّقَ بغيره، فيصدُّكَ عن ذاك ليرُدّكَ إليه. | الشَّافعيّ\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport App from \"./App\";\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: \"30px\",\n  // you can also just use 'scale'\n  transition: transitions.SCALE,\n};\n\nconst Root = () => (\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate} {...options}>\n      {/* <BrowserRouter>\n    <Routes>\n      <Route path=\"/:guildID?\">\n\n      </Route>\n    </Routes>\n  </BrowserRouter> */}\n      <App />\n    </AlertProvider>\n  </React.StrictMode>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n","const backend = process.env.REACT_APP_VERCEL_GIT_REPO_OWNER\r\n  ? \"https://api.exabot.ml\"\r\n  : \"http://localhost:2323\";\r\nmodule.exports = {\r\n  backend,\r\n  login: `${backend}/api/auth/discord`,\r\n  logout: `${backend}/api/auth/logout`,\r\n  add: `${backend}/api/auth/add`,\r\n  user: `${backend}/api/auth`,\r\n  guild: `${backend}/api/guilds`,\r\n  buttons: [\r\n    {\r\n      title: \"إرسال رسالة\",\r\n      text: \"يقوم بإرسال رسالة للغرفة\",\r\n      button: \"أرسل\",\r\n      image: \"https://th.bing.com/th/id/OIP.1HOjiBzIYbSQfPZzhT1PcwHaCl\",\r\n      function: (params) => {\r\n        if (!params) return;\r\n      },\r\n    },\r\n  ],\r\n  servers: [\r\n    {\r\n      title: \"EXA-4-EVER\",\r\n      text: \"الخادم الخاص بقنواتنا على منصات التواصل الإجتماعي\",\r\n      button: \"إنضم الآن\",\r\n      image:\r\n        \"https://cdn.discordapp.com/attachments/794744822610788352/925491922586435584/8a24a0fa33c54d18.png?size=1024\",\r\n      invite: \"https://discord.gg/ZPpwb3GRyG\",\r\n    },\r\n    {\r\n      title: \"EXA-Support\",\r\n      text: \"الخادم الخاص بالدعم السريع\",\r\n      button: \"إنضم الآن\",\r\n      image:\r\n        \"https://cdn.discordapp.com/attachments/794744822610788352/925429847147298836/20191115_213644.png?size=1024\",\r\n      invite: \"https://discord.gg/n9AQZ6qjNc\",\r\n    },\r\n    {\r\n      title: \"EXA-TUBE\",\r\n      text: \"الخادم الخاص بمنصات التواصل الإجتماعي\",\r\n      button: \"إنضم الآن\",\r\n      image:\r\n        \"https://cdn.discordapp.com/attachments/794744822610788352/925429847726104607/15172ac809befacf.png?size=1024\",\r\n      invite: \"https://discord.gg/e4ewVXcKCs\",\r\n    },\r\n    {\r\n      title: \"EXA-Studio™\",\r\n      text: \"الخادم الخاص بالبرمجيات المختلفة\",\r\n      button: \"إنضم الآن\",\r\n      image:\r\n        \"https://cdn.discordapp.com/attachments/794744822610788352/925429847487045672/studio.png?size=1024\",\r\n      invite: \"https://discord.gg/aEkKZQfZuk\",\r\n    },\r\n  ],\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport function getData(url) {\r\n  return axios.get(url, {\r\n    withCredentials: true,\r\n  });\r\n}\r\n"],"sourceRoot":""}